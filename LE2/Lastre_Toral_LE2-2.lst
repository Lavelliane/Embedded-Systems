

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 16 12:17:26 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	maintext,global,class=CODE,split=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	dabs	1,0x7E,2
     9  0000                     	;# 
    10  0001                     	;# 
    11  0002                     	;# 
    12  0003                     	;# 
    13  0004                     	;# 
    14  0005                     	;# 
    15  0006                     	;# 
    16  0007                     	;# 
    17  0008                     	;# 
    18  0009                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0013                     	;# 
    30  0014                     	;# 
    31  0015                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0017                     	;# 
    35  0018                     	;# 
    36  0019                     	;# 
    37  001A                     	;# 
    38  001B                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001D                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  0087                     	;# 
    48  0088                     	;# 
    49  0089                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0094                     	;# 
    57  0098                     	;# 
    58  0099                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  009F                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  010E                     	;# 
    66  010F                     	;# 
    67  018C                     	;# 
    68  018D                     	;# 
    69  0005                     _PORTA	set	5
    70  0008                     _PORTD	set	8
    71  0044                     _RD4	set	68
    72  009F                     _ADCON1	set	159
    73  009C                     _CMCON	set	156
    74  0085                     _TRISA	set	133
    75  0088                     _TRISD	set	136
    76                           
    77                           	psect	maintext
    78  077C                     __pmaintext:	
    79                           ; #config settings
    80                           
    81                           
    82                           ;psect for function _main
    83  0000                     
    84 ;;
    85 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    86 ;;
    87 ;; *************** function _main *****************
    88 ;; Defined at:
    89 ;;		line 20 in file "Z:\3201\LE2\Lastre_Toral_LE2-2.c"
    90 ;; Parameters:    Size  Location     Type
    91 ;;		None
    92 ;; Auto vars:     Size  Location     Type
    93 ;;  read            2    2[COMMON] int 
    94 ;; Return value:  Size  Location     Type
    95 ;;		None               void
    96 ;; Registers used:
    97 ;;		wreg, fsr0l, fsr0h, status,2, status,0
    98 ;; Tracked objects:
    99 ;;		On entry : 17F/0
   100 ;;		On exit  : 0/0
   101 ;;		Unchanged: 0/0
   102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   103 ;;      Params:         0       0       0       0       0
   104 ;;      Locals:         2       0       0       0       0
   105 ;;      Temps:          2       0       0       0       0
   106 ;;      Totals:         4       0       0       0       0
   107 ;;Total ram usage:        4 bytes
   108 ;; This function calls:
   109 ;;		Nothing
   110 ;; This function is called by:
   111 ;;		Startup code after reset
   112 ;; This function uses a non-reentrant model
   113 ;;
   114  077C                     _main:	
   115                           
   116                           ;Lastre_Toral_LE2-2.c: 22: ADCON1 = 0x06;
   117                           
   118                           ;incstack = 0
   119                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   120  077C  3006               	movlw	6
   121  077D  1683               	bsf	3,5	;RP0=1, select bank1
   122  077E  1303               	bcf	3,6	;RP1=0, select bank1
   123  077F  009F               	movwf	31	;volatile
   124                           
   125                           ;Lastre_Toral_LE2-2.c: 23: CMCON = 0x07;
   126  0780  3007               	movlw	7
   127  0781  009C               	movwf	28	;volatile
   128                           
   129                           ;Lastre_Toral_LE2-2.c: 24: TRISA = 0x00;
   130  0782  0185               	clrf	5	;volatile
   131                           
   132                           ;Lastre_Toral_LE2-2.c: 25: TRISD = 0XFF;
   133  0783  30FF               	movlw	255
   134  0784  0088               	movwf	8	;volatile
   135                           
   136                           ;Lastre_Toral_LE2-2.c: 26: int read;
   137                           ;Lastre_Toral_LE2-2.c: 27: PORTA=0x00;
   138  0785  1283               	bcf	3,5	;RP0=0, select bank0
   139  0786  1303               	bcf	3,6	;RP1=0, select bank0
   140  0787  0185               	clrf	5	;volatile
   141  0788                     l536:	
   142                           ;Lastre_Toral_LE2-2.c: 29: while(1)
   143                           
   144                           
   145                           ;Lastre_Toral_LE2-2.c: 30: {
   146                           ;Lastre_Toral_LE2-2.c: 31: if(RD4 == 1)
   147  0788  1E08               	btfss	8,4	;volatile
   148  0789  2F88               	goto	l536
   149                           
   150                           ;Lastre_Toral_LE2-2.c: 32: {
   151                           ;Lastre_Toral_LE2-2.c: 34: read = PORTD & 0x0F;
   152  078A  0808               	movf	8,w	;volatile
   153  078B  390F               	andlw	15
   154  078C  00F0               	movwf	??_main
   155  078D  01F1               	clrf	??_main+1
   156  078E  0870               	movf	??_main,w
   157  078F  00F2               	movwf	main@read
   158  0790  0871               	movf	??_main+1,w
   159  0791  00F3               	movwf	main@read+1
   160                           
   161                           ;Lastre_Toral_LE2-2.c: 36: switch(read)
   162  0792  2FCE               	goto	l566
   163  0793                     l540:	
   164                           ;Lastre_Toral_LE2-2.c: 37: {
   165                           ;Lastre_Toral_LE2-2.c: 38: case 0x00:
   166                           
   167                           
   168                           ;Lastre_Toral_LE2-2.c: 39: PORTA=0x01;while(RD4 ==1);
   169  0793  3001               	movlw	1
   170  0794  0085               	movwf	5	;volatile
   171  0795                     l23:	
   172  0795  1E08               	btfss	8,4	;volatile
   173  0796  2F88               	goto	l536
   174  0797  2F95               	goto	l23
   175  0798                     l542:	
   176                           ;Lastre_Toral_LE2-2.c: 41: case 0x01:
   177                           
   178                           ;Lastre_Toral_LE2-2.c: 40: break;
   179                           
   180                           
   181                           ;Lastre_Toral_LE2-2.c: 42: PORTA=0x02;
   182  0798  3002               	movlw	2
   183  0799  0085               	movwf	5	;volatile
   184  079A                     l28:	
   185                           ;Lastre_Toral_LE2-2.c: 43: while(RD4 ==1);
   186                           
   187  079A  1E08               	btfss	8,4	;volatile
   188  079B  2F88               	goto	l536
   189  079C  2F9A               	goto	l28
   190  079D                     l544:	
   191                           ;Lastre_Toral_LE2-2.c: 45: case 0x02:
   192                           
   193                           ;Lastre_Toral_LE2-2.c: 44: break;
   194                           
   195                           
   196                           ;Lastre_Toral_LE2-2.c: 46: PORTA=0x03;
   197  079D  3003               	movlw	3
   198  079E  0085               	movwf	5	;volatile
   199  079F                     l32:	
   200                           ;Lastre_Toral_LE2-2.c: 47: while(RD4 ==1);
   201                           
   202  079F  1E08               	btfss	8,4	;volatile
   203  07A0  2F88               	goto	l536
   204  07A1  2F9F               	goto	l32
   205  07A2                     l546:	
   206                           ;Lastre_Toral_LE2-2.c: 49: case 0x04:
   207                           
   208                           ;Lastre_Toral_LE2-2.c: 48: break;
   209                           
   210                           
   211                           ;Lastre_Toral_LE2-2.c: 50: PORTA=0x04;
   212  07A2  3004               	movlw	4
   213  07A3  0085               	movwf	5	;volatile
   214  07A4                     l36:	
   215                           ;Lastre_Toral_LE2-2.c: 51: while(RD4 ==1);
   216                           
   217  07A4  1E08               	btfss	8,4	;volatile
   218  07A5  2F88               	goto	l536
   219  07A6  2FA4               	goto	l36
   220  07A7                     l548:	
   221                           ;Lastre_Toral_LE2-2.c: 53: case 0x05:
   222                           
   223                           ;Lastre_Toral_LE2-2.c: 52: break;
   224                           
   225                           
   226                           ;Lastre_Toral_LE2-2.c: 54: PORTA=0x05;
   227  07A7  3005               	movlw	5
   228  07A8  0085               	movwf	5	;volatile
   229  07A9                     l40:	
   230                           ;Lastre_Toral_LE2-2.c: 55: while(RD4 ==1);
   231                           
   232  07A9  1E08               	btfss	8,4	;volatile
   233  07AA  2F88               	goto	l536
   234  07AB  2FA9               	goto	l40
   235  07AC                     l550:	
   236                           ;Lastre_Toral_LE2-2.c: 57: case 0x06:
   237                           
   238                           ;Lastre_Toral_LE2-2.c: 56: break;
   239                           
   240                           
   241                           ;Lastre_Toral_LE2-2.c: 58: PORTA=0x06;
   242  07AC  3006               	movlw	6
   243  07AD  0085               	movwf	5	;volatile
   244  07AE                     l44:	
   245                           ;Lastre_Toral_LE2-2.c: 59: while(RD4 ==1);
   246                           
   247  07AE  1E08               	btfss	8,4	;volatile
   248  07AF  2F88               	goto	l536
   249  07B0  2FAE               	goto	l44
   250  07B1                     l552:	
   251                           ;Lastre_Toral_LE2-2.c: 61: case 0x08:
   252                           
   253                           ;Lastre_Toral_LE2-2.c: 60: break;
   254                           
   255                           
   256                           ;Lastre_Toral_LE2-2.c: 62: PORTA=0x07;
   257  07B1  3007               	movlw	7
   258  07B2  0085               	movwf	5	;volatile
   259  07B3                     l48:	
   260                           ;Lastre_Toral_LE2-2.c: 63: while(RD4 ==1);
   261                           
   262  07B3  1E08               	btfss	8,4	;volatile
   263  07B4  2F88               	goto	l536
   264  07B5  2FB3               	goto	l48
   265  07B6                     l554:	
   266                           ;Lastre_Toral_LE2-2.c: 65: case 0x09:
   267                           
   268                           ;Lastre_Toral_LE2-2.c: 64: break;
   269                           
   270                           
   271                           ;Lastre_Toral_LE2-2.c: 66: PORTA=0x08;
   272  07B6  3008               	movlw	8
   273  07B7  0085               	movwf	5	;volatile
   274  07B8                     l52:	
   275                           ;Lastre_Toral_LE2-2.c: 67: while(RD4 ==1);
   276                           
   277  07B8  1E08               	btfss	8,4	;volatile
   278  07B9  2F88               	goto	l536
   279  07BA  2FB8               	goto	l52
   280  07BB                     l556:	
   281                           ;Lastre_Toral_LE2-2.c: 69: case 0x0A:
   282                           
   283                           ;Lastre_Toral_LE2-2.c: 68: break;
   284                           
   285                           
   286                           ;Lastre_Toral_LE2-2.c: 70: PORTA=0x09;
   287  07BB  3009               	movlw	9
   288  07BC  0085               	movwf	5	;volatile
   289  07BD                     l56:	
   290                           ;Lastre_Toral_LE2-2.c: 71: while(RD4 ==1);
   291                           
   292  07BD  1E08               	btfss	8,4	;volatile
   293  07BE  2F88               	goto	l536
   294  07BF  2FBD               	goto	l56
   295  07C0                     l558:	
   296                           ;Lastre_Toral_LE2-2.c: 73: case 0x0C:
   297                           
   298                           ;Lastre_Toral_LE2-2.c: 72: break;
   299                           
   300                           
   301                           ;Lastre_Toral_LE2-2.c: 74: PORTA=0xFF;
   302  07C0  30FF               	movlw	255
   303  07C1  0085               	movwf	5	;volatile
   304  07C2                     l60:	
   305                           ;Lastre_Toral_LE2-2.c: 75: while(RD4 ==1);
   306                           
   307  07C2  1E08               	btfss	8,4	;volatile
   308  07C3  2F88               	goto	l536
   309  07C4  2FC2               	goto	l60
   310  07C5                     l560:	
   311                           ;Lastre_Toral_LE2-2.c: 77: case 0x0D:
   312                           
   313                           ;Lastre_Toral_LE2-2.c: 76: break;
   314                           
   315                           
   316                           ;Lastre_Toral_LE2-2.c: 78: PORTA=0x00;
   317  07C5  0185               	clrf	5	;volatile
   318  07C6                     l64:	
   319                           ;Lastre_Toral_LE2-2.c: 79: while(RD4 ==1);
   320                           
   321  07C6  1E08               	btfss	8,4	;volatile
   322  07C7  2F88               	goto	l536
   323  07C8  2FC6               	goto	l64
   324  07C9                     l562:	
   325                           ;Lastre_Toral_LE2-2.c: 81: case 0x0E:
   326                           
   327                           ;Lastre_Toral_LE2-2.c: 80: break;
   328                           
   329                           
   330                           ;Lastre_Toral_LE2-2.c: 82: PORTA=0xFF;
   331  07C9  30FF               	movlw	255
   332  07CA  0085               	movwf	5	;volatile
   333  07CB                     l68:	
   334                           ;Lastre_Toral_LE2-2.c: 83: while(RD4 ==1);
   335                           
   336  07CB  1E08               	btfss	8,4	;volatile
   337  07CC  2F88               	goto	l536
   338  07CD  2FCB               	goto	l68
   339  07CE                     l566:	
   340                           ;Lastre_Toral_LE2-2.c: 85: }
   341                           
   342                           ;Lastre_Toral_LE2-2.c: 84: break;
   343                           
   344                           
   345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   346                           ; Switch size 1, requested type "space"
   347                           ; Number of cases is 1, Range of values is 0 to 0
   348                           ; switch strategies available:
   349                           ; Name         Instructions Cycles
   350                           ; simple_byte            4     3 (average)
   351                           ; direct_byte           11     8 (fixed)
   352                           ; jumptable            260     6 (fixed)
   353                           ;	Chosen strategy is simple_byte
   354  07CE  0873               	movf	main@read+1,w
   355  07CF  3A00               	xorlw	0	; case 0
   356  07D0  1903               	skipnz
   357  07D1  2FD3               	goto	l604
   358  07D2  2F88               	goto	l536
   359  07D3                     l604:	
   360                           
   361                           ; Switch size 1, requested type "space"
   362                           ; Number of cases is 12, Range of values is 0 to 14
   363                           ; switch strategies available:
   364                           ; Name         Instructions Cycles
   365                           ; simple_byte           37    19 (average)
   366                           ; direct_byte           53     8 (fixed)
   367                           ; jumptable            260     6 (fixed)
   368                           ;	Chosen strategy is simple_byte
   369  07D3  0872               	movf	main@read,w
   370  07D4  3A00               	xorlw	0	; case 0
   371  07D5  1903               	skipnz
   372  07D6  2F93               	goto	l540
   373  07D7  3A01               	xorlw	1	; case 1
   374  07D8  1903               	skipnz
   375  07D9  2F98               	goto	l542
   376  07DA  3A03               	xorlw	3	; case 2
   377  07DB  1903               	skipnz
   378  07DC  2F9D               	goto	l544
   379  07DD  3A06               	xorlw	6	; case 4
   380  07DE  1903               	skipnz
   381  07DF  2FA2               	goto	l546
   382  07E0  3A01               	xorlw	1	; case 5
   383  07E1  1903               	skipnz
   384  07E2  2FA7               	goto	l548
   385  07E3  3A03               	xorlw	3	; case 6
   386  07E4  1903               	skipnz
   387  07E5  2FAC               	goto	l550
   388  07E6  3A0E               	xorlw	14	; case 8
   389  07E7  1903               	skipnz
   390  07E8  2FB1               	goto	l552
   391  07E9  3A01               	xorlw	1	; case 9
   392  07EA  1903               	skipnz
   393  07EB  2FB6               	goto	l554
   394  07EC  3A03               	xorlw	3	; case 10
   395  07ED  1903               	skipnz
   396  07EE  2FBB               	goto	l556
   397  07EF  3A06               	xorlw	6	; case 12
   398  07F0  1903               	skipnz
   399  07F1  2FC0               	goto	l558
   400  07F2  3A01               	xorlw	1	; case 13
   401  07F3  1903               	skipnz
   402  07F4  2FC5               	goto	l560
   403  07F5  3A03               	xorlw	3	; case 14
   404  07F6  1903               	skipnz
   405  07F7  2FC9               	goto	l562
   406  07F8  2F88               	goto	l536
   407  07F9  2F88               	goto	l536
   408  07FA                     __end_of_main:	
   409  007E                     btemp	set	126	;btemp
   410  007E                     wtemp	set	126
   411  007E                     wtemp0	set	126
   412  0080                     wtemp1	set	128
   413  0082                     wtemp2	set	130
   414  0084                     wtemp3	set	132
   415  0086                     wtemp4	set	134
   416  0088                     wtemp5	set	136
   417  007F                     wtemp6	set	127
   418  007E                     ttemp	set	126
   419  007E                     ttemp0	set	126
   420  0081                     ttemp1	set	129
   421  0084                     ttemp2	set	132
   422  0087                     ttemp3	set	135
   423  007F                     ttemp4	set	127
   424  007E                     ltemp	set	126
   425  007E                     ltemp0	set	126
   426  0082                     ltemp1	set	130
   427  0086                     ltemp2	set	134
   428  0080                     ltemp3	set	128
   429                           
   430                           	psect	cinit
   431  07FA                     start_initialization:	
   432  07FA                     __initialization:	
   433                           
   434                           ; Clear objects allocated to COMMON
   435  07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   436  07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   437  07FC                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  07FC                     __end_of__initialization:	
   441  07FC  0183               	clrf	3
   442  07FD  120A  118A  2F7C   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  0074                     __pbssCOMMON:	
   446  0074                     _j:	
   447  0074                     	ds	2
   448                           
   449                           	psect	cstackCOMMON
   450  0070                     __pcstackCOMMON:	
   451  0070                     ?_main:	
   452  0070                     ??_main:	
   453                           ; 0 bytes @ 0x0
   454                           
   455                           
   456                           ; 0 bytes @ 0x0
   457  0070                     	ds	2
   458  0072                     main@read:	
   459                           
   460                           ; 2 bytes @ 0x2
   461  0072                     	ds	2


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 16 12:17:26 2023

                      _j 0074              __CFG_CP$OFF 0000                       l23 0795  
                     l40 07A9                       l32 079F                       l60 07C2  
                     l52 07B8                       l44 07AE                       l36 07A4  
                     l28 079A                       l64 07C6                       l56 07BD  
                     l48 07B3                       l68 07CB                      l604 07D3  
                    l540 0793                      l550 07AC                      l542 0798  
                    l560 07C5                      l552 07B1                      l544 079D  
                    l536 0788                      l562 07C9                      l554 07B6  
                    l546 07A2                      l556 07BB                      l548 07A7  
                    l558 07C0                      l566 07CE                      _RD4 0044  
           __CFG_CPD$OFF 0000             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 077C                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _CMCON 009C                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0070  
                 _ADCON1 009F  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 077C     end_of_initialization 07FC      start_initialization 07FA  
            __pbssCOMMON 0074                ___latbits 0002            __size_of_main 007E  
               main@read 0072  
