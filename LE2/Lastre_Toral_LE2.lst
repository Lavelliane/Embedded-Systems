

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 16 11:55:07 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  0006                     _PORTB	set	6
    75  0008                     _PORTD	set	8
    76  0038                     _RC0	set	56
    77  0039                     _RC1	set	57
    78  003A                     _RC2	set	58
    79  0044                     _RD4	set	68
    80  0086                     _TRISB	set	134
    81  0087                     _TRISC	set	135
    82  0088                     _TRISD	set	136
    83                           
    84                           	psect	strings
    85  0003                     __pstrings:	
    86  0003                     stringtab:	
    87  0003                     __stringtab:	
    88  0003                     stringcode:	
    89                           ;	String table - string pointers are 1 byte each
    90                           
    91  0003                     stringdir:	
    92  0003  3000               	movlw	high stringdir
    93  0004  008A               	movwf	10
    94  0005  0804               	movf	4,w
    95  0006  0A84               	incf	4,f
    96  0007  0782               	addwf	2,f
    97  0008                     __stringbase:	
    98  0008  3400               	retlw	0
    99  0009                     __end_of__stringtab:	
   100  0009                     __stringdata:	
   101  0009                     STR_12:	
   102  0009  3423               	retlw	35	;'#'
   103  000A  3400               	retlw	0
   104  000B                     STR_10:	
   105  000B  342A               	retlw	42	;'*'
   106  000C  3400               	retlw	0
   107  000D                     STR_11:	
   108  000D  3430               	retlw	48	;'0'
   109  000E  3400               	retlw	0
   110  000F                     STR_1:	
   111  000F  3431               	retlw	49	;'1'
   112  0010  3400               	retlw	0
   113  0011                     STR_2:	
   114  0011  3432               	retlw	50	;'2'
   115  0012  3400               	retlw	0
   116  0013                     STR_3:	
   117  0013  3433               	retlw	51	;'3'
   118  0014  3400               	retlw	0
   119  0015                     STR_4:	
   120  0015  3434               	retlw	52	;'4'
   121  0016  3400               	retlw	0
   122  0017                     STR_5:	
   123  0017  3435               	retlw	53	;'5'
   124  0018  3400               	retlw	0
   125  0019                     STR_6:	
   126  0019  3436               	retlw	54	;'6'
   127  001A  3400               	retlw	0
   128  001B                     STR_7:	
   129  001B  3437               	retlw	55	;'7'
   130  001C  3400               	retlw	0
   131  001D                     STR_8:	
   132  001D  3438               	retlw	56	;'8'
   133  001E  3400               	retlw	0
   134  001F                     STR_9:	
   135  001F  3439               	retlw	57	;'9'
   136  0020  3400               	retlw	0
   137  0021                     __end_of__stringdata:	
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  07FA                     start_initialization:	
   143  07FA                     __initialization:	
   144                           
   145                           ; Clear objects allocated to COMMON
   146  07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   147  07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   148  07FC                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  07FC                     __end_of__initialization:	
   152  07FC  0183               	clrf	3
   153  07FD  120A  118A  2EA9   	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMMON
   156  0079                     __pbssCOMMON:	
   157  0079                     _j:	
   158  0079                     	ds	2
   159                           
   160                           	psect	cstackCOMMON
   161  0070                     __pcstackCOMMON:	
   162  0070                     ?_instCtrl:	
   163  0070                     ??_instCtrl:	
   164                           ; 0 bytes @ 0x0
   165                           
   166  0070                     ?_initLCD:	
   167                           ; 0 bytes @ 0x0
   168                           
   169  0070                     ?_dataCtrl:	
   170                           ; 0 bytes @ 0x0
   171                           
   172  0070                     ??_dataCtrl:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  0070                     ?_show:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_main:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     instCtrl@data:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0070                     dataCtrl@b:	
   185                           ; 1 bytes @ 0x0
   186                           
   187                           
   188                           ; 1 bytes @ 0x0
   189  0070                     	ds	1
   190  0071                     ??_initLCD:	
   191  0071                     ??_show:	
   192                           ; 0 bytes @ 0x1
   193                           
   194                           
   195                           ; 0 bytes @ 0x1
   196  0071                     	ds	1
   197  0072                     show@s:	
   198                           
   199                           ; 1 bytes @ 0x2
   200  0072                     	ds	1
   201  0073                     ??_main:	
   202                           
   203                           ; 0 bytes @ 0x3
   204  0073                     	ds	2
   205  0075                     main@read:	
   206                           
   207                           ; 2 bytes @ 0x5
   208  0075                     	ds	2
   209  0077                     main@count:	
   210                           
   211                           ; 2 bytes @ 0x7
   212  0077                     	ds	2
   213                           
   214                           	psect	maintext
   215  06A9                     __pmaintext:	
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 65 in file "Z:\3201\LE2\Lastre_Toral_LE2-3.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  count           2    7[COMMON] int 
   226 ;;  read            2    5[COMMON] int 
   227 ;; Return value:  Size  Location     Type
   228 ;;		None               void
   229 ;; Registers used:
   230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 17F/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         4       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0
   239 ;;      Totals:         6       0       0       0       0
   240 ;;Total ram usage:        6 bytes
   241 ;; Hardware stack levels required when called:    2
   242 ;; This function calls:
   243 ;;		_initLCD
   244 ;;		_instCtrl
   245 ;;		_show
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           
   252                           ;psect for function _main
   253  06A9                     _main:	
   254                           
   255                           ;Lastre_Toral_LE2-3.c: 68: TRISB = 0X00;
   256                           
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   259  06A9  1683               	bsf	3,5	;RP0=1, select bank1
   260  06AA  1303               	bcf	3,6	;RP1=0, select bank1
   261  06AB  0186               	clrf	6	;volatile
   262                           
   263                           ;Lastre_Toral_LE2-3.c: 69: TRISC = 0X00;
   264  06AC  0187               	clrf	7	;volatile
   265                           
   266                           ;Lastre_Toral_LE2-3.c: 70: TRISD = 0XFF;
   267  06AD  30FF               	movlw	255
   268  06AE  0088               	movwf	8	;volatile
   269                           
   270                           ;Lastre_Toral_LE2-3.c: 73: initLCD();
   271  06AF  120A  118A  262C  120A  118A  	fcall	_initLCD
   272                           
   273                           ;Lastre_Toral_LE2-3.c: 74: instCtrl(0x80);
   274  06B4  3080               	movlw	128
   275  06B5  120A  118A  2655  120A  118A  	fcall	_instCtrl
   276                           
   277                           ;Lastre_Toral_LE2-3.c: 75: instCtrl(0x01);
   278  06BA  3001               	movlw	1
   279  06BB  120A  118A  2655  120A  118A  	fcall	_instCtrl
   280                           
   281                           ;Lastre_Toral_LE2-3.c: 76: int read= 0x00;
   282  06C0  01F5               	clrf	main@read
   283  06C1  01F6               	clrf	main@read+1
   284                           
   285                           ;Lastre_Toral_LE2-3.c: 77: int count = 0x00;
   286  06C2  01F7               	clrf	main@count
   287  06C3  01F8               	clrf	main@count+1
   288  06C4                     l620:	
   289                           ;Lastre_Toral_LE2-3.c: 80: while (1)
   290                           
   291                           
   292                           ;Lastre_Toral_LE2-3.c: 81: {
   293                           ;Lastre_Toral_LE2-3.c: 83: if(RD4 == 1)
   294  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   295  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   296  06C6  1E08               	btfss	8,4	;volatile
   297  06C7  2EC4               	goto	l620
   298                           
   299                           ;Lastre_Toral_LE2-3.c: 84: {
   300                           ;Lastre_Toral_LE2-3.c: 86: read = PORTD & 0x0F;
   301  06C8  0808               	movf	8,w	;volatile
   302  06C9  390F               	andlw	15
   303  06CA  00F3               	movwf	??_main
   304  06CB  01F4               	clrf	??_main+1
   305  06CC  0873               	movf	??_main,w
   306  06CD  00F5               	movwf	main@read
   307  06CE  0874               	movf	??_main+1,w
   308  06CF  00F6               	movwf	main@read+1
   309                           
   310                           ;Lastre_Toral_LE2-3.c: 87: if(count==20 )
   311  06D0  3014               	movlw	20
   312  06D1  0677               	xorwf	main@count,w
   313  06D2  0478               	iorwf	main@count+1,w
   314  06D3  1D03               	skipz
   315  06D4  2EDC               	goto	l628
   316                           
   317                           ;Lastre_Toral_LE2-3.c: 88: instCtrl(0xC0);
   318  06D5  30C0               	movlw	192
   319  06D6  120A  118A  2655  120A  118A  	fcall	_instCtrl
   320  06DB  2FCE               	goto	l692
   321  06DC                     l628:	
   322                           
   323                           ;Lastre_Toral_LE2-3.c: 89: else if(count==40)
   324  06DC  3028               	movlw	40
   325  06DD  0677               	xorwf	main@count,w
   326  06DE  0478               	iorwf	main@count+1,w
   327  06DF  1D03               	skipz
   328  06E0  2EE8               	goto	l632
   329                           
   330                           ;Lastre_Toral_LE2-3.c: 90: instCtrl(0x94);
   331  06E1  3094               	movlw	148
   332  06E2  120A  118A  2655  120A  118A  	fcall	_instCtrl
   333  06E7  2FCE               	goto	l692
   334  06E8                     l632:	
   335                           
   336                           ;Lastre_Toral_LE2-3.c: 91: else if(count==60)
   337  06E8  303C               	movlw	60
   338  06E9  0677               	xorwf	main@count,w
   339  06EA  0478               	iorwf	main@count+1,w
   340  06EB  1D03               	skipz
   341  06EC  2EF4               	goto	l636
   342                           
   343                           ;Lastre_Toral_LE2-3.c: 92: instCtrl(0xD4);
   344  06ED  30D4               	movlw	212
   345  06EE  120A  118A  2655  120A  118A  	fcall	_instCtrl
   346  06F3  2FCE               	goto	l692
   347  06F4                     l636:	
   348                           
   349                           ;Lastre_Toral_LE2-3.c: 93: else if(count==80)
   350  06F4  3050               	movlw	80
   351  06F5  0677               	xorwf	main@count,w
   352  06F6  0478               	iorwf	main@count+1,w
   353  06F7  1D03               	skipz
   354  06F8  2FCE               	goto	l692
   355                           
   356                           ;Lastre_Toral_LE2-3.c: 94: {
   357                           ;Lastre_Toral_LE2-3.c: 95: instCtrl(0x01);
   358  06F9  3001               	movlw	1
   359  06FA  120A  118A  2655  120A  118A  	fcall	_instCtrl
   360                           
   361                           ;Lastre_Toral_LE2-3.c: 96: count=0;
   362  06FF  01F7               	clrf	main@count
   363  0700  01F8               	clrf	main@count+1
   364                           
   365                           ;Lastre_Toral_LE2-3.c: 97: }
   366                           ;Lastre_Toral_LE2-3.c: 99: switch(read)
   367  0701  2FCE               	goto	l692
   368  0702                     l642:	
   369                           ;Lastre_Toral_LE2-3.c: 100: {
   370                           ;Lastre_Toral_LE2-3.c: 101: case 0x00:
   371                           
   372                           
   373                           ;Lastre_Toral_LE2-3.c: 102: show("1"); count++; while(RD4 ==1);
   374  0702  3007               	movlw	(STR_1-__stringbase)& (0+255)
   375  0703  120A  118A  2610  120A  118A  	fcall	_show
   376  0708  3001               	movlw	1
   377  0709  07F7               	addwf	main@count,f
   378  070A  1803               	skipnc
   379  070B  0AF8               	incf	main@count+1,f
   380  070C  3000               	movlw	0
   381  070D  07F8               	addwf	main@count+1,f
   382  070E                     l53:	
   383  070E  1283               	bcf	3,5	;RP0=0, select bank0
   384  070F  1303               	bcf	3,6	;RP1=0, select bank0
   385  0710  1E08               	btfss	8,4	;volatile
   386  0711  2EC4               	goto	l620
   387  0712  2F0E               	goto	l53
   388  0713                     l646:	
   389                           ;Lastre_Toral_LE2-3.c: 104: case 0x01:
   390                           
   391                           ;Lastre_Toral_LE2-3.c: 103: break;
   392                           
   393                           
   394                           ;Lastre_Toral_LE2-3.c: 105: show("2"); count++; while(RD4 ==1);
   395  0713  3009               	movlw	(STR_2-__stringbase)& (0+255)
   396  0714  120A  118A  2610  120A  118A  	fcall	_show
   397  0719  3001               	movlw	1
   398  071A  07F7               	addwf	main@count,f
   399  071B  1803               	skipnc
   400  071C  0AF8               	incf	main@count+1,f
   401  071D  3000               	movlw	0
   402  071E  07F8               	addwf	main@count+1,f
   403  071F                     l58:	
   404  071F  1283               	bcf	3,5	;RP0=0, select bank0
   405  0720  1303               	bcf	3,6	;RP1=0, select bank0
   406  0721  1E08               	btfss	8,4	;volatile
   407  0722  2EC4               	goto	l620
   408  0723  2F1F               	goto	l58
   409  0724                     l650:	
   410                           ;Lastre_Toral_LE2-3.c: 107: case 0x02:
   411                           
   412                           ;Lastre_Toral_LE2-3.c: 106: break;
   413                           
   414                           
   415                           ;Lastre_Toral_LE2-3.c: 108: show("3"); count++; while(RD4 ==1);
   416  0724  300B               	movlw	(STR_3-__stringbase)& (0+255)
   417  0725  120A  118A  2610  120A  118A  	fcall	_show
   418  072A  3001               	movlw	1
   419  072B  07F7               	addwf	main@count,f
   420  072C  1803               	skipnc
   421  072D  0AF8               	incf	main@count+1,f
   422  072E  3000               	movlw	0
   423  072F  07F8               	addwf	main@count+1,f
   424  0730                     l62:	
   425  0730  1283               	bcf	3,5	;RP0=0, select bank0
   426  0731  1303               	bcf	3,6	;RP1=0, select bank0
   427  0732  1E08               	btfss	8,4	;volatile
   428  0733  2EC4               	goto	l620
   429  0734  2F30               	goto	l62
   430  0735                     l654:	
   431                           ;Lastre_Toral_LE2-3.c: 110: case 0x04:
   432                           
   433                           ;Lastre_Toral_LE2-3.c: 109: break;
   434                           
   435                           
   436                           ;Lastre_Toral_LE2-3.c: 111: show("4"); count++; while(RD4 ==1);
   437  0735  300D               	movlw	(STR_4-__stringbase)& (0+255)
   438  0736  120A  118A  2610  120A  118A  	fcall	_show
   439  073B  3001               	movlw	1
   440  073C  07F7               	addwf	main@count,f
   441  073D  1803               	skipnc
   442  073E  0AF8               	incf	main@count+1,f
   443  073F  3000               	movlw	0
   444  0740  07F8               	addwf	main@count+1,f
   445  0741                     l66:	
   446  0741  1283               	bcf	3,5	;RP0=0, select bank0
   447  0742  1303               	bcf	3,6	;RP1=0, select bank0
   448  0743  1E08               	btfss	8,4	;volatile
   449  0744  2EC4               	goto	l620
   450  0745  2F41               	goto	l66
   451  0746                     l658:	
   452                           ;Lastre_Toral_LE2-3.c: 113: case 0x05:
   453                           
   454                           ;Lastre_Toral_LE2-3.c: 112: break;
   455                           
   456                           
   457                           ;Lastre_Toral_LE2-3.c: 114: show("5"); count++; while(RD4 ==1);
   458  0746  300F               	movlw	(STR_5-__stringbase)& (0+255)
   459  0747  120A  118A  2610  120A  118A  	fcall	_show
   460  074C  3001               	movlw	1
   461  074D  07F7               	addwf	main@count,f
   462  074E  1803               	skipnc
   463  074F  0AF8               	incf	main@count+1,f
   464  0750  3000               	movlw	0
   465  0751  07F8               	addwf	main@count+1,f
   466  0752                     l70:	
   467  0752  1283               	bcf	3,5	;RP0=0, select bank0
   468  0753  1303               	bcf	3,6	;RP1=0, select bank0
   469  0754  1E08               	btfss	8,4	;volatile
   470  0755  2EC4               	goto	l620
   471  0756  2F52               	goto	l70
   472  0757                     l662:	
   473                           ;Lastre_Toral_LE2-3.c: 116: case 0x06:
   474                           
   475                           ;Lastre_Toral_LE2-3.c: 115: break;
   476                           
   477                           
   478                           ;Lastre_Toral_LE2-3.c: 117: show("6"); count++; while(RD4 ==1);
   479  0757  3011               	movlw	(STR_6-__stringbase)& (0+255)
   480  0758  120A  118A  2610  120A  118A  	fcall	_show
   481  075D  3001               	movlw	1
   482  075E  07F7               	addwf	main@count,f
   483  075F  1803               	skipnc
   484  0760  0AF8               	incf	main@count+1,f
   485  0761  3000               	movlw	0
   486  0762  07F8               	addwf	main@count+1,f
   487  0763                     l74:	
   488  0763  1283               	bcf	3,5	;RP0=0, select bank0
   489  0764  1303               	bcf	3,6	;RP1=0, select bank0
   490  0765  1E08               	btfss	8,4	;volatile
   491  0766  2EC4               	goto	l620
   492  0767  2F63               	goto	l74
   493  0768                     l666:	
   494                           ;Lastre_Toral_LE2-3.c: 119: case 0x08:
   495                           
   496                           ;Lastre_Toral_LE2-3.c: 118: break;
   497                           
   498                           
   499                           ;Lastre_Toral_LE2-3.c: 120: show("7"); count++; while(RD4 ==1);
   500  0768  3013               	movlw	(STR_7-__stringbase)& (0+255)
   501  0769  120A  118A  2610  120A  118A  	fcall	_show
   502  076E  3001               	movlw	1
   503  076F  07F7               	addwf	main@count,f
   504  0770  1803               	skipnc
   505  0771  0AF8               	incf	main@count+1,f
   506  0772  3000               	movlw	0
   507  0773  07F8               	addwf	main@count+1,f
   508  0774                     l78:	
   509  0774  1283               	bcf	3,5	;RP0=0, select bank0
   510  0775  1303               	bcf	3,6	;RP1=0, select bank0
   511  0776  1E08               	btfss	8,4	;volatile
   512  0777  2EC4               	goto	l620
   513  0778  2F74               	goto	l78
   514  0779                     l670:	
   515                           ;Lastre_Toral_LE2-3.c: 122: case 0x09:
   516                           
   517                           ;Lastre_Toral_LE2-3.c: 121: break;
   518                           
   519                           
   520                           ;Lastre_Toral_LE2-3.c: 123: show("8"); count++; while(RD4 ==1);
   521  0779  3015               	movlw	(STR_8-__stringbase)& (0+255)
   522  077A  120A  118A  2610  120A  118A  	fcall	_show
   523  077F  3001               	movlw	1
   524  0780  07F7               	addwf	main@count,f
   525  0781  1803               	skipnc
   526  0782  0AF8               	incf	main@count+1,f
   527  0783  3000               	movlw	0
   528  0784  07F8               	addwf	main@count+1,f
   529  0785                     l82:	
   530  0785  1283               	bcf	3,5	;RP0=0, select bank0
   531  0786  1303               	bcf	3,6	;RP1=0, select bank0
   532  0787  1E08               	btfss	8,4	;volatile
   533  0788  2EC4               	goto	l620
   534  0789  2F85               	goto	l82
   535  078A                     l674:	
   536                           ;Lastre_Toral_LE2-3.c: 125: case 0x0A:
   537                           
   538                           ;Lastre_Toral_LE2-3.c: 124: break;
   539                           
   540                           
   541                           ;Lastre_Toral_LE2-3.c: 126: show("9"); count++; while(RD4 ==1);
   542  078A  3017               	movlw	(STR_9-__stringbase)& (0+255)
   543  078B  120A  118A  2610  120A  118A  	fcall	_show
   544  0790  3001               	movlw	1
   545  0791  07F7               	addwf	main@count,f
   546  0792  1803               	skipnc
   547  0793  0AF8               	incf	main@count+1,f
   548  0794  3000               	movlw	0
   549  0795  07F8               	addwf	main@count+1,f
   550  0796                     l86:	
   551  0796  1283               	bcf	3,5	;RP0=0, select bank0
   552  0797  1303               	bcf	3,6	;RP1=0, select bank0
   553  0798  1E08               	btfss	8,4	;volatile
   554  0799  2EC4               	goto	l620
   555  079A  2F96               	goto	l86
   556  079B                     l678:	
   557                           ;Lastre_Toral_LE2-3.c: 128: case 0x0C:
   558                           
   559                           ;Lastre_Toral_LE2-3.c: 127: break;
   560                           
   561                           
   562                           ;Lastre_Toral_LE2-3.c: 129: show("*"); count++; while(RD4 ==1);
   563  079B  3003               	movlw	(STR_10-__stringbase)& (0+255)
   564  079C  120A  118A  2610  120A  118A  	fcall	_show
   565  07A1  3001               	movlw	1
   566  07A2  07F7               	addwf	main@count,f
   567  07A3  1803               	skipnc
   568  07A4  0AF8               	incf	main@count+1,f
   569  07A5  3000               	movlw	0
   570  07A6  07F8               	addwf	main@count+1,f
   571  07A7                     l90:	
   572  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   573  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   574  07A9  1E08               	btfss	8,4	;volatile
   575  07AA  2EC4               	goto	l620
   576  07AB  2FA7               	goto	l90
   577  07AC                     l682:	
   578                           ;Lastre_Toral_LE2-3.c: 131: case 0x0D:
   579                           
   580                           ;Lastre_Toral_LE2-3.c: 130: break;
   581                           
   582                           
   583                           ;Lastre_Toral_LE2-3.c: 132: show("0"); count++; while(RD4 ==1);
   584  07AC  3005               	movlw	(STR_11-__stringbase)& (0+255)
   585  07AD  120A  118A  2610  120A  118A  	fcall	_show
   586  07B2  3001               	movlw	1
   587  07B3  07F7               	addwf	main@count,f
   588  07B4  1803               	skipnc
   589  07B5  0AF8               	incf	main@count+1,f
   590  07B6  3000               	movlw	0
   591  07B7  07F8               	addwf	main@count+1,f
   592  07B8                     l94:	
   593  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   594  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   595  07BA  1E08               	btfss	8,4	;volatile
   596  07BB  2EC4               	goto	l620
   597  07BC  2FB8               	goto	l94
   598  07BD                     l686:	
   599                           ;Lastre_Toral_LE2-3.c: 134: case 0x0E:
   600                           
   601                           ;Lastre_Toral_LE2-3.c: 133: break;
   602                           
   603                           
   604                           ;Lastre_Toral_LE2-3.c: 135: show("#"); count++;while(RD4 ==1);
   605  07BD  3001               	movlw	(STR_12-__stringbase)& (0+255)
   606  07BE  120A  118A  2610  120A  118A  	fcall	_show
   607  07C3  3001               	movlw	1
   608  07C4  07F7               	addwf	main@count,f
   609  07C5  1803               	skipnc
   610  07C6  0AF8               	incf	main@count+1,f
   611  07C7  3000               	movlw	0
   612  07C8  07F8               	addwf	main@count+1,f
   613  07C9                     l98:	
   614  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   615  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   616  07CB  1E08               	btfss	8,4	;volatile
   617  07CC  2EC4               	goto	l620
   618  07CD  2FC9               	goto	l98
   619  07CE                     l692:	
   620                           ;Lastre_Toral_LE2-3.c: 137: }
   621                           
   622                           ;Lastre_Toral_LE2-3.c: 136: break;
   623                           
   624                           
   625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   626                           ; Switch size 1, requested type "space"
   627                           ; Number of cases is 1, Range of values is 0 to 0
   628                           ; switch strategies available:
   629                           ; Name         Instructions Cycles
   630                           ; simple_byte            4     3 (average)
   631                           ; direct_byte           11     8 (fixed)
   632                           ; jumptable            260     6 (fixed)
   633                           ;	Chosen strategy is simple_byte
   634  07CE  0876               	movf	main@read+1,w
   635  07CF  3A00               	xorlw	0	; case 0
   636  07D0  1903               	skipnz
   637  07D1  2FD3               	goto	l730
   638  07D2  2EC4               	goto	l620
   639  07D3                     l730:	
   640                           
   641                           ; Switch size 1, requested type "space"
   642                           ; Number of cases is 12, Range of values is 0 to 14
   643                           ; switch strategies available:
   644                           ; Name         Instructions Cycles
   645                           ; simple_byte           37    19 (average)
   646                           ; direct_byte           53     8 (fixed)
   647                           ; jumptable            260     6 (fixed)
   648                           ;	Chosen strategy is simple_byte
   649  07D3  0875               	movf	main@read,w
   650  07D4  3A00               	xorlw	0	; case 0
   651  07D5  1903               	skipnz
   652  07D6  2F02               	goto	l642
   653  07D7  3A01               	xorlw	1	; case 1
   654  07D8  1903               	skipnz
   655  07D9  2F13               	goto	l646
   656  07DA  3A03               	xorlw	3	; case 2
   657  07DB  1903               	skipnz
   658  07DC  2F24               	goto	l650
   659  07DD  3A06               	xorlw	6	; case 4
   660  07DE  1903               	skipnz
   661  07DF  2F35               	goto	l654
   662  07E0  3A01               	xorlw	1	; case 5
   663  07E1  1903               	skipnz
   664  07E2  2F46               	goto	l658
   665  07E3  3A03               	xorlw	3	; case 6
   666  07E4  1903               	skipnz
   667  07E5  2F57               	goto	l662
   668  07E6  3A0E               	xorlw	14	; case 8
   669  07E7  1903               	skipnz
   670  07E8  2F68               	goto	l666
   671  07E9  3A01               	xorlw	1	; case 9
   672  07EA  1903               	skipnz
   673  07EB  2F79               	goto	l670
   674  07EC  3A03               	xorlw	3	; case 10
   675  07ED  1903               	skipnz
   676  07EE  2F8A               	goto	l674
   677  07EF  3A06               	xorlw	6	; case 12
   678  07F0  1903               	skipnz
   679  07F1  2F9B               	goto	l678
   680  07F2  3A01               	xorlw	1	; case 13
   681  07F3  1903               	skipnz
   682  07F4  2FAC               	goto	l682
   683  07F5  3A03               	xorlw	3	; case 14
   684  07F6  1903               	skipnz
   685  07F7  2FBD               	goto	l686
   686  07F8  2EC4               	goto	l620
   687  07F9  2EC4               	goto	l620
   688  07FA                     __end_of_main:	
   689                           
   690                           	psect	text1
   691  0610                     __ptext1:	
   692 ;; *************** function _show *****************
   693 ;; Defined at:
   694 ;;		line 59 in file "Z:\3201\LE2\Lastre_Toral_LE2-3.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  s               1    wreg     PTR const unsigned char 
   697 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
   698 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
   699 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  s               1    2[COMMON] PTR const unsigned char 
   702 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
   703 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
   704 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0
   716 ;;      Temps:          1       0       0       0       0
   717 ;;      Totals:         2       0       0       0       0
   718 ;;Total ram usage:        2 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		_dataCtrl
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _show
   730  0610                     _show:	
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   734                           ;show@s stored from wreg
   735  0610  00F2               	movwf	show@s
   736  0611                     l604:	
   737                           ;Lastre_Toral_LE2-3.c: 61: while(*s) {
   738                           
   739  0611  0872               	movf	show@s,w
   740  0612  0084               	movwf	4
   741  0613  120A  118A  2003  120A  118A  	fcall	stringdir
   742  0618  3800               	iorlw	0
   743  0619  1903               	btfsc	3,2
   744  061A  0008               	return
   745                           
   746                           ;Lastre_Toral_LE2-3.c: 62: dataCtrl(*s++);
   747  061B  0872               	movf	show@s,w
   748  061C  0084               	movwf	4
   749  061D  120A  118A  2003  120A  118A  	fcall	stringdir
   750  0622  120A  118A  267F  120A  118A  	fcall	_dataCtrl
   751  0627  3001               	movlw	1
   752  0628  00F1               	movwf	??_show
   753  0629  0871               	movf	??_show,w
   754  062A  07F2               	addwf	show@s,f
   755  062B  2E11               	goto	l604
   756  062C                     __end_of_show:	
   757                           
   758                           	psect	text2
   759  067F                     __ptext2:	
   760 ;; *************** function _dataCtrl *****************
   761 ;; Defined at:
   762 ;;		line 50 in file "Z:\3201\LE2\Lastre_Toral_LE2-3.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  b               1    wreg     unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  b               1    0[COMMON] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;		None               void
   769 ;; Registers used:
   770 ;;		wreg, status,2, btemp+1
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         1       0       0       0       0
   780 ;;Total ram usage:        1 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_show
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _dataCtrl
   791  067F                     _dataCtrl:	
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _dataCtrl: [wreg+status,2+btemp+1]
   795                           ;dataCtrl@b stored from wreg
   796  067F  00F0               	movwf	dataCtrl@b
   797                           
   798                           ;Lastre_Toral_LE2-3.c: 52: PORTB=b;
   799  0680  0870               	movf	dataCtrl@b,w
   800  0681  1283               	bcf	3,5	;RP0=0, select bank0
   801  0682  1303               	bcf	3,6	;RP1=0, select bank0
   802  0683  0086               	movwf	6	;volatile
   803                           
   804                           ;Lastre_Toral_LE2-3.c: 53: RC0=1;
   805  0684  1407               	bsf	7,0	;volatile
   806                           
   807                           ;Lastre_Toral_LE2-3.c: 54: RC2=0;
   808  0685  1107               	bcf	7,2	;volatile
   809                           
   810                           ;Lastre_Toral_LE2-3.c: 55: RC1=1;
   811  0686  1487               	bsf	7,1	;volatile
   812                           
   813                           ;Lastre_Toral_LE2-3.c: 56: for(j=0;j<100;j++);
   814  0687  01F9               	clrf	_j
   815  0688  01FA               	clrf	_j+1
   816  0689  087A               	movf	_j+1,w
   817  068A  3A80               	xorlw	128
   818  068B  00FF               	movwf	127
   819  068C  3080               	movlw	128
   820  068D  027F               	subwf	127,w
   821  068E  1D03               	skipz
   822  068F  2E92               	goto	u35
   823  0690  3064               	movlw	100
   824  0691  0279               	subwf	_j,w
   825  0692                     u35:	
   826  0692  1803               	btfsc	3,0
   827  0693  2EA5               	goto	l32
   828  0694                     l592:	
   829  0694  3001               	movlw	1
   830  0695  07F9               	addwf	_j,f
   831  0696  1803               	skipnc
   832  0697  0AFA               	incf	_j+1,f
   833  0698  3000               	movlw	0
   834  0699  07FA               	addwf	_j+1,f
   835  069A  087A               	movf	_j+1,w
   836  069B  3A80               	xorlw	128
   837  069C  00FF               	movwf	127
   838  069D  3080               	movlw	128
   839  069E  027F               	subwf	127,w
   840  069F  1D03               	skipz
   841  06A0  2EA3               	goto	u45
   842  06A1  3064               	movlw	100
   843  06A2  0279               	subwf	_j,w
   844  06A3                     u45:	
   845  06A3  1C03               	skipc
   846  06A4  2E94               	goto	l592
   847  06A5                     l32:	
   848                           
   849                           ;Lastre_Toral_LE2-3.c: 57: RC1=0;
   850  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   851  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   852  06A7  1087               	bcf	7,1	;volatile
   853  06A8  0008               	return
   854  06A9                     __end_of_dataCtrl:	
   855                           
   856                           	psect	text3
   857  062C                     __ptext3:	
   858 ;; *************** function _initLCD *****************
   859 ;; Defined at:
   860 ;;		line 37 in file "Z:\3201\LE2\Lastre_Toral_LE2-3.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    1
   881 ;; This function calls:
   882 ;;		_instCtrl
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _initLCD
   890  062C                     _initLCD:	
   891                           
   892                           ;Lastre_Toral_LE2-3.c: 39: instCtrl(0x38);
   893                           
   894                           ;incstack = 0
   895                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   896  062C  3038               	movlw	56
   897  062D  120A  118A  2655  120A  118A  	fcall	_instCtrl
   898                           
   899                           ;Lastre_Toral_LE2-3.c: 40: instCtrl(0x08);
   900  0632  3008               	movlw	8
   901  0633  120A  118A  2655  120A  118A  	fcall	_instCtrl
   902                           
   903                           ;Lastre_Toral_LE2-3.c: 41: instCtrl(0x01);
   904  0638  3001               	movlw	1
   905  0639  120A  118A  2655  120A  118A  	fcall	_instCtrl
   906                           
   907                           ;Lastre_Toral_LE2-3.c: 42: instCtrl(0x06);
   908  063E  3006               	movlw	6
   909  063F  120A  118A  2655  120A  118A  	fcall	_instCtrl
   910                           
   911                           ;Lastre_Toral_LE2-3.c: 43: instCtrl(0x0C);
   912  0644  300C               	movlw	12
   913  0645  120A  118A  2655  120A  118A  	fcall	_instCtrl
   914                           
   915                           ;Lastre_Toral_LE2-3.c: 44: instCtrl(0x06);
   916  064A  3006               	movlw	6
   917  064B  120A  118A  2655  120A  118A  	fcall	_instCtrl
   918                           
   919                           ;Lastre_Toral_LE2-3.c: 45: instCtrl(0x80);
   920  0650  3080               	movlw	128
   921  0651  120A  118A  2655   	fcall	_instCtrl
   922  0654  0008               	return
   923  0655                     __end_of_initLCD:	
   924                           
   925                           	psect	text4
   926  0655                     __ptext4:	
   927 ;; *************** function _instCtrl *****************
   928 ;; Defined at:
   929 ;;		line 27 in file "Z:\3201\LE2\Lastre_Toral_LE2-3.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  data            1    wreg     unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  data            1    0[COMMON] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, status,2, btemp+1
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         1       0       0       0       0
   947 ;;Total ram usage:        1 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_initLCD
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _instCtrl
   959  0655                     _instCtrl:	
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _instCtrl: [wreg+status,2+btemp+1]
   963                           ;instCtrl@data stored from wreg
   964  0655  00F0               	movwf	instCtrl@data
   965                           
   966                           ;Lastre_Toral_LE2-3.c: 29: PORTB= data;
   967  0656  0870               	movf	instCtrl@data,w
   968  0657  1283               	bcf	3,5	;RP0=0, select bank0
   969  0658  1303               	bcf	3,6	;RP1=0, select bank0
   970  0659  0086               	movwf	6	;volatile
   971                           
   972                           ;Lastre_Toral_LE2-3.c: 30: RC0=0;
   973  065A  1007               	bcf	7,0	;volatile
   974                           
   975                           ;Lastre_Toral_LE2-3.c: 31: RC2=0;
   976  065B  1107               	bcf	7,2	;volatile
   977                           
   978                           ;Lastre_Toral_LE2-3.c: 32: RC1=1;
   979  065C  1487               	bsf	7,1	;volatile
   980                           
   981                           ;Lastre_Toral_LE2-3.c: 33: for(j=0;j<100;j++);
   982  065D  01F9               	clrf	_j
   983  065E  01FA               	clrf	_j+1
   984  065F  087A               	movf	_j+1,w
   985  0660  3A80               	xorlw	128
   986  0661  00FF               	movwf	127
   987  0662  3080               	movlw	128
   988  0663  027F               	subwf	127,w
   989  0664  1D03               	skipz
   990  0665  2E68               	goto	u15
   991  0666  3064               	movlw	100
   992  0667  0279               	subwf	_j,w
   993  0668                     u15:	
   994  0668  1803               	btfsc	3,0
   995  0669  2E7B               	goto	l24
   996  066A                     l574:	
   997  066A  3001               	movlw	1
   998  066B  07F9               	addwf	_j,f
   999  066C  1803               	skipnc
  1000  066D  0AFA               	incf	_j+1,f
  1001  066E  3000               	movlw	0
  1002  066F  07FA               	addwf	_j+1,f
  1003  0670  087A               	movf	_j+1,w
  1004  0671  3A80               	xorlw	128
  1005  0672  00FF               	movwf	127
  1006  0673  3080               	movlw	128
  1007  0674  027F               	subwf	127,w
  1008  0675  1D03               	skipz
  1009  0676  2E79               	goto	u25
  1010  0677  3064               	movlw	100
  1011  0678  0279               	subwf	_j,w
  1012  0679                     u25:	
  1013  0679  1C03               	skipc
  1014  067A  2E6A               	goto	l574
  1015  067B                     l24:	
  1016                           
  1017                           ;Lastre_Toral_LE2-3.c: 34: RC1=0;
  1018  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1019  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1020  067D  1087               	bcf	7,1	;volatile
  1021  067E  0008               	return
  1022  067F                     __end_of_instCtrl:	
  1023  007E                     btemp	set	126	;btemp
  1024  007E                     wtemp	set	126
  1025  007E                     wtemp0	set	126
  1026  0080                     wtemp1	set	128
  1027  0082                     wtemp2	set	130
  1028  0084                     wtemp3	set	132
  1029  0086                     wtemp4	set	134
  1030  0088                     wtemp5	set	136
  1031  007F                     wtemp6	set	127
  1032  007E                     ttemp	set	126
  1033  007E                     ttemp0	set	126
  1034  0081                     ttemp1	set	129
  1035  0084                     ttemp2	set	132
  1036  0087                     ttemp3	set	135
  1037  007F                     ttemp4	set	127
  1038  007E                     ltemp	set	126
  1039  007E                     ltemp0	set	126
  1040  0082                     ltemp1	set	130
  1041  0086                     ltemp2	set	134
  1042  0080                     ltemp3	set	128


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_show
    _show->_dataCtrl
    _initLCD->_instCtrl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     438
                                              3 COMMON     6     6      0
                            _initLCD
                           _instCtrl
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     333
                                              1 COMMON     2     2      0
                           _dataCtrl
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0      15
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _instCtrl
   _instCtrl
   _show
     _dataCtrl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 16 11:55:07 2023

                      _j 0079                        pc 0002              __CFG_CP$OFF 0000  
                     l24 067B                       l32 06A5                       l53 070E  
                     l70 0752                       l62 0730                       l90 07A7  
                     l82 0785                       l74 0763                       l66 0741  
                     l58 071F                       l94 07B8                       l86 0796  
                     l78 0774                       l98 07C9                       u15 0668  
                     u25 0679                       u35 0692                       u45 06A3  
                     fsr 0004                      l604 0611                      l620 06C4  
                    l632 06E8                      l730 07D3                      l650 0724  
                    l642 0702                      l636 06F4                      l628 06DC  
                    l574 066A                      l670 0779                      l662 0757  
                    l654 0735                      l646 0713                      l592 0694  
                    l682 07AC                      l674 078A                      l666 0768  
                    l658 0746                      l692 07CE                      l686 07BD  
                    l678 079B                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RD4 0044             __CFG_CPD$OFF 0000  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   STR_1 000F                     STR_2 0011                     STR_3 0013  
                   STR_4 0015                     STR_5 0017                     STR_6 0019  
                   STR_7 001B                     STR_8 001D                     STR_9 001F  
           __CFG_WRT$OFF 0000                     _main 06A9                     _show 0610  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ?_main 0070                    STR_10 000B                    STR_11 000D  
                  STR_12 0009            __CFG_WDTE$OFF 0000                    ?_show 0070  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
        __end_of_initLCD 0655                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  show@s 0072                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FA  
           __end_of_main 07FA             __end_of_show 062C                   ??_main 0073  
                 ??_show 0071         __end_of_dataCtrl 06A9         __end_of_instCtrl 067F  
              ??_initLCD 0071  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 06A9                ?_dataCtrl 0070               __stringtab 0003  
              ?_instCtrl 0070                  __ptext1 0610                  __ptext2 067F  
                __ptext3 062C                  __ptext4 0655                  _initLCD 062C  
             ??_dataCtrl 0070     end_of_initialization 07FC               ??_instCtrl 0070  
           instCtrl@data 0070      start_initialization 07FA              __pbssCOMMON 0079  
              ___latbits 0002      __end_of__stringdata 0021        __size_of_dataCtrl 002A  
      __size_of_instCtrl 002A                __pstrings 0003                 ?_initLCD 0070  
              dataCtrl@b 0070              __stringbase 0008              __stringdata 0009  
              main@count 0077       __end_of__stringtab 0009                 _dataCtrl 067F  
       __size_of_initLCD 0029            __size_of_main 0151            __size_of_show 001C  
               _instCtrl 0655                 main@read 0075                stringcode 0003  
               stringdir 0003                 stringtab 0003  
