

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Feb 21 12:47:01 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0007                     _PORTC	set	7
    76  0008                     _PORTD	set	8
    77  005F                     _GIE	set	95
    78  005C                     _INTE	set	92
    79  0059                     _INTF	set	89
    80  005E                     _PEIE	set	94
    81  005D                     _TMR0IE	set	93
    82  005A                     _TMR0IF	set	90
    83  0081                     _OPTION_REG	set	129
    84  0086                     _TRISB	set	134
    85  0087                     _TRISC	set	135
    86  0088                     _TRISD	set	136
    87                           
    88                           	psect	text0
    89  0000                     __ptext0:	
    90                           ; #config settings
    91                           
    92                           
    93                           ;psect for function _ISR
    94  0000                     
    95                           	psect	cinit
    96  0015                     start_initialization:	
    97  0015                     __initialization:	
    98                           
    99                           ; Clear objects allocated to BITCOMMON
   100  0015  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  0016  01A7               	clrf	__pbssBANK0& (0+127)
   104  0017  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   105  0018                     end_of_initialization:	
   106                           ;End of C runtime variable initialization code
   107                           
   108  0018                     __end_of__initialization:	
   109  0018  0183               	clrf	3
   110  0019  120A  118A  287D   	ljmp	_main	;jump to C main() function
   111                           
   112                           	psect	bitbssCOMMON
   113  03C0                     __pbitbssCOMMON:	
   114  03C0                     _count_flag:	
   115  03C0                     	ds	1
   116                           
   117                           	psect	bssBANK0
   118  0027                     __pbssBANK0:	
   119  0027                     _segment:	
   120  0027                     	ds	2
   121                           
   122                           	psect	cstackCOMMON
   123  0070                     __pcstackCOMMON:	
   124  0070                     ?_ISR:	
   125  0070                     ??_ISR:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 0 bytes @ 0x0
   130                           
   131                           
   132                           ; 0 bytes @ 0x0
   133  0070                     	ds	6
   134  0076                     ISR@read:	
   135                           
   136                           ; 2 bytes @ 0x6
   137  0076                     	ds	2
   138                           
   139                           	psect	cstackBANK0
   140  0020                     __pcstackBANK0:	
   141  0020                     ?_delay:	
   142  0020                     delay@counter:	
   143                           ; 0 bytes @ 0x0
   144                           
   145                           
   146                           ; 2 bytes @ 0x0
   147  0020                     	ds	2
   148  0022                     ??_delay:	
   149                           
   150                           ; 0 bytes @ 0x2
   151  0022                     	ds	1
   152  0023                     delay@of_count:	
   153                           
   154                           ; 2 bytes @ 0x3
   155  0023                     	ds	2
   156  0025                     ??_main:	
   157  0025                     main@i:	
   158                           ; 0 bytes @ 0x5
   159                           
   160                           
   161                           ; 2 bytes @ 0x5
   162  0025                     	ds	2
   163                           
   164                           	psect	maintext
   165  007D                     __pmaintext:	
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 105 in file "Z:\3201\LE3\LASTRE_TORAL_3-3.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;  i               2    5[BANK0 ] int 
   176 ;; Return value:  Size  Location     Type
   177 ;;		None               void
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : 17F/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   185 ;;      Params:         0       0       0       0       0
   186 ;;      Locals:         0       2       0       0       0
   187 ;;      Temps:          0       0       0       0       0
   188 ;;      Totals:         0       2       0       0       0
   189 ;;Total ram usage:        2 bytes
   190 ;; Hardware stack levels required when called:    2
   191 ;; This function calls:
   192 ;;		_delay
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  007D                     _main:	
   201                           
   202                           ;LASTRE_TORAL_3-3.c: 107: GIE = 1;
   203                           
   204                           ;incstack = 0
   205                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   206  007D  178B               	bsf	11,7	;volatile
   207                           
   208                           ;LASTRE_TORAL_3-3.c: 108: INTE = 1;
   209  007E  160B               	bsf	11,4	;volatile
   210                           
   211                           ;LASTRE_TORAL_3-3.c: 109: INTF = 0;
   212  007F  108B               	bcf	11,1	;volatile
   213                           
   214                           ;LASTRE_TORAL_3-3.c: 110: OPTION_REG = 0x43;
   215  0080  3043               	movlw	67
   216  0081  1683               	bsf	3,5	;RP0=1, select bank1
   217  0082  1303               	bcf	3,6	;RP1=0, select bank1
   218  0083  0081               	movwf	1	;volatile
   219                           
   220                           ;LASTRE_TORAL_3-3.c: 114: PEIE=1;
   221  0084  170B               	bsf	11,6	;volatile
   222                           
   223                           ;LASTRE_TORAL_3-3.c: 115: TMR0IE = 1;
   224  0085  168B               	bsf	11,5	;volatile
   225                           
   226                           ;LASTRE_TORAL_3-3.c: 116: TMR0IF = 0;
   227  0086  110B               	bcf	11,2	;volatile
   228                           
   229                           ;LASTRE_TORAL_3-3.c: 118: TRISB = 0x01;
   230  0087  3001               	movlw	1
   231  0088  0086               	movwf	6	;volatile
   232                           
   233                           ;LASTRE_TORAL_3-3.c: 119: TRISC = 0x00;
   234  0089  0187               	clrf	7	;volatile
   235                           
   236                           ;LASTRE_TORAL_3-3.c: 120: TRISD= 0xFF;
   237  008A  30FF               	movlw	255
   238  008B  0088               	movwf	8	;volatile
   239                           
   240                           ;LASTRE_TORAL_3-3.c: 121: PORTC = 0x05;
   241  008C  3005               	movlw	5
   242  008D  1283               	bcf	3,5	;RP0=0, select bank0
   243  008E  1303               	bcf	3,6	;RP1=0, select bank0
   244  008F  0087               	movwf	7	;volatile
   245  0090                     l693:	
   246                           ;LASTRE_TORAL_3-3.c: 124: while (1)
   247                           
   248                           
   249                           ;LASTRE_TORAL_3-3.c: 125: {
   250                           ;LASTRE_TORAL_3-3.c: 126: for(int i = 0 ; i<8 ; i ++)
   251  0090  1283               	bcf	3,5	;RP0=0, select bank0
   252  0091  1303               	bcf	3,6	;RP1=0, select bank0
   253  0092  01A5               	clrf	main@i
   254  0093  01A6               	clrf	main@i+1
   255  0094                     L1:	
   256  0094  0826               	movf	main@i+1,w
   257  0095  3A80               	xorlw	128
   258  0096  00FF               	movwf	127
   259  0097  3080               	movlw	128
   260  0098  027F               	subwf	127,w
   261  0099  1D03               	skipz
   262  009A  289D               	goto	u125
   263  009B  3008               	movlw	8
   264  009C  0225               	subwf	main@i,w
   265  009D                     u125:	
   266  009D  1803               	btfsc	3,0
   267  009E  2890               	goto	l693
   268                           
   269                           ;LASTRE_TORAL_3-3.c: 127: {
   270                           ;LASTRE_TORAL_3-3.c: 128: PORTC = segment;
   271  009F  1283               	bcf	3,5	;RP0=0, select bank0
   272  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   273  00A1  0827               	movf	_segment,w
   274  00A2  0087               	movwf	7	;volatile
   275                           
   276                           ;LASTRE_TORAL_3-3.c: 129: segment++;
   277  00A3  3001               	movlw	1
   278  00A4  07A7               	addwf	_segment,f
   279  00A5  1803               	skipnc
   280  00A6  0AA8               	incf	_segment+1,f
   281  00A7  3000               	movlw	0
   282  00A8  07A8               	addwf	_segment+1,f
   283                           
   284                           ;LASTRE_TORAL_3-3.c: 130: delay(195);
   285  00A9  30C3               	movlw	195
   286  00AA  00A0               	movwf	delay@counter
   287  00AB  3000               	movlw	0
   288  00AC  00A1               	movwf	delay@counter+1
   289  00AD  120A  118A  20C2  120A  118A  	fcall	_delay
   290                           
   291                           ;LASTRE_TORAL_3-3.c: 131: if(segment == 0x0A)
   292  00B2  300A               	movlw	10
   293  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   294  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   295  00B5  0627               	xorwf	_segment,w
   296  00B6  0428               	iorwf	_segment+1,w
   297  00B7  1D03               	skipz
   298  00B8  28BB               	goto	l707
   299                           
   300                           ;LASTRE_TORAL_3-3.c: 132: segment= 0x00;
   301  00B9  01A7               	clrf	_segment
   302  00BA  01A8               	clrf	_segment+1
   303  00BB                     l707:	
   304  00BB  3001               	movlw	1
   305  00BC  07A5               	addwf	main@i,f
   306  00BD  1803               	skipnc
   307  00BE  0AA6               	incf	main@i+1,f
   308  00BF  3000               	movlw	0
   309  00C0  07A6               	addwf	main@i+1,f
   310  00C1  2894               	goto	L1
   311  00C2                     __end_of_main:	
   312                           
   313                           	psect	text1
   314  00C2                     __ptext1:	
   315 ;; *************** function _delay *****************
   316 ;; Defined at:
   317 ;;		line 91 in file "Z:\3201\LE3\LASTRE_TORAL_3-3.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  counter         2    0[BANK0 ] int 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  of_count        2    3[BANK0 ] int 
   322 ;; Return value:  Size  Location     Type
   323 ;;		None               void
   324 ;; Registers used:
   325 ;;		wreg, status,2
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         0       2       0       0       0
   332 ;;      Locals:         0       2       0       0       0
   333 ;;      Temps:          0       1       0       0       0
   334 ;;      Totals:         0       5       0       0       0
   335 ;;Total ram usage:        5 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _delay
   347  00C2                     _delay:	
   348                           
   349                           ;LASTRE_TORAL_3-3.c: 93: int of_count = 0;
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _delay: [wreg+status,2]
   353  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   354  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   355  00C4  01A3               	clrf	delay@of_count
   356  00C5  01A4               	clrf	delay@of_count+1
   357  00C6                     l51:	
   358                           ;LASTRE_TORAL_3-3.c: 95: while(of_count < counter)
   359                           
   360  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   361  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   362  00C8  0824               	movf	delay@of_count+1,w
   363  00C9  3A80               	xorlw	128
   364  00CA  00A2               	movwf	??_delay
   365  00CB  0821               	movf	delay@counter+1,w
   366  00CC  3A80               	xorlw	128
   367  00CD  0222               	subwf	??_delay,w
   368  00CE  1D03               	skipz
   369  00CF  28D2               	goto	u95
   370  00D0  0820               	movf	delay@counter,w
   371  00D1  0223               	subwf	delay@of_count,w
   372  00D2                     u95:	
   373  00D2  1803               	btfsc	3,0
   374  00D3  0008               	return
   375                           
   376                           ;LASTRE_TORAL_3-3.c: 96: {
   377                           ;LASTRE_TORAL_3-3.c: 97: if(count_flag)
   378  00D4  1C78               	btfss	_count_flag/(0+8),_count_flag& (0+7)
   379  00D5  28C6               	goto	l51
   380                           
   381                           ;LASTRE_TORAL_3-3.c: 98: {
   382                           ;LASTRE_TORAL_3-3.c: 99: of_count++;
   383  00D6  3001               	movlw	1
   384  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   385  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   386  00D9  07A3               	addwf	delay@of_count,f
   387  00DA  1803               	skipnc
   388  00DB  0AA4               	incf	delay@of_count+1,f
   389  00DC  3000               	movlw	0
   390  00DD  07A4               	addwf	delay@of_count+1,f
   391                           
   392                           ;LASTRE_TORAL_3-3.c: 100: count_flag=0;
   393  00DE  1078               	bcf	_count_flag/(0+8),_count_flag& (0+7)
   394  00DF  28C6               	goto	l51
   395  00E0                     __end_of_delay:	
   396                           
   397                           	psect	text2
   398  001C                     __ptext2:	
   399 ;; *************** function _ISR *****************
   400 ;; Defined at:
   401 ;;		line 27 in file "Z:\3201\LE3\LASTRE_TORAL_3-3.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  read            2    6[COMMON] int 
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         2       0       0       0       0
   417 ;;      Temps:          6       0       0       0       0
   418 ;;      Totals:         8       0       0       0       0
   419 ;;Total ram usage:        8 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		Interrupt level 1
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _ISR
   430  001C                     _ISR:	
   431                           
   432                           ;LASTRE_TORAL_3-3.c: 29: GIE = 0;
   433  001C  138B               	bcf	11,7	;volatile
   434                           
   435                           ;LASTRE_TORAL_3-3.c: 30: if (INTF)
   436  001D  1C8B               	btfss	11,1	;volatile
   437  001E  286D               	goto	i1l31
   438                           
   439                           ;LASTRE_TORAL_3-3.c: 31: {
   440                           ;LASTRE_TORAL_3-3.c: 34: int read;
   441                           ;LASTRE_TORAL_3-3.c: 35: read = PORTD & 0x0F;
   442  001F  0808               	movf	8,w	;volatile
   443  0020  390F               	andlw	15
   444  0021  00F0               	movwf	??_ISR
   445  0022  01F1               	clrf	??_ISR+1
   446  0023  0870               	movf	??_ISR,w
   447  0024  00F6               	movwf	ISR@read
   448  0025  0871               	movf	??_ISR+1,w
   449  0026  00F7               	movwf	ISR@read+1
   450                           
   451                           ;LASTRE_TORAL_3-3.c: 37: switch(read)
   452  0027  2840               	goto	i1l667
   453  0028                     i1l641:	
   454                           ;LASTRE_TORAL_3-3.c: 38: {
   455                           ;LASTRE_TORAL_3-3.c: 39: case 0x00:
   456                           
   457                           
   458                           ;LASTRE_TORAL_3-3.c: 40: segment=0x01;
   459  0028  3001               	movlw	1
   460  0029  2839               	goto	L9
   461  002A                     i1l643:	
   462                           ;LASTRE_TORAL_3-3.c: 42: case 0x01:
   463                           
   464                           ;LASTRE_TORAL_3-3.c: 41: break;
   465                           
   466                           
   467                           ;LASTRE_TORAL_3-3.c: 43: segment=0x02;
   468  002A  3002               	movlw	2
   469  002B  2839               	goto	L9
   470  002C                     i1l645:	
   471                           ;LASTRE_TORAL_3-3.c: 45: case 0x02:
   472                           
   473                           ;LASTRE_TORAL_3-3.c: 44: break;
   474                           
   475                           
   476                           ;LASTRE_TORAL_3-3.c: 46: segment=0x03;
   477  002C  3003               	movlw	3
   478  002D  2839               	goto	L9
   479  002E                     i1l647:	
   480                           ;LASTRE_TORAL_3-3.c: 48: case 0x04:
   481                           
   482                           ;LASTRE_TORAL_3-3.c: 47: break;
   483                           
   484                           
   485                           ;LASTRE_TORAL_3-3.c: 49: segment=0x04;
   486  002E  3004               	movlw	4
   487  002F  2839               	goto	L9
   488  0030                     i1l649:	
   489                           ;LASTRE_TORAL_3-3.c: 51: case 0x05:
   490                           
   491                           ;LASTRE_TORAL_3-3.c: 50: break;
   492                           
   493                           
   494                           ;LASTRE_TORAL_3-3.c: 52: segment=0x05;
   495  0030  3005               	movlw	5
   496  0031  2839               	goto	L9
   497  0032                     i1l651:	
   498                           ;LASTRE_TORAL_3-3.c: 54: case 0x06:
   499                           
   500                           ;LASTRE_TORAL_3-3.c: 53: break;
   501                           
   502                           
   503                           ;LASTRE_TORAL_3-3.c: 55: segment=0x06;
   504  0032  3006               	movlw	6
   505  0033  2839               	goto	L9
   506  0034                     i1l653:	
   507                           ;LASTRE_TORAL_3-3.c: 57: case 0x08:
   508                           
   509                           ;LASTRE_TORAL_3-3.c: 56: break;
   510                           
   511                           
   512                           ;LASTRE_TORAL_3-3.c: 58: segment=0x07;
   513  0034  3007               	movlw	7
   514  0035  2839               	goto	L9
   515  0036                     i1l655:	
   516                           ;LASTRE_TORAL_3-3.c: 60: case 0x09:
   517                           
   518                           ;LASTRE_TORAL_3-3.c: 59: break;
   519                           
   520                           
   521                           ;LASTRE_TORAL_3-3.c: 61: segment=0x08;
   522  0036  3008               	movlw	8
   523  0037  2839               	goto	L9
   524  0038                     i1l657:	
   525                           ;LASTRE_TORAL_3-3.c: 63: case 0x0A:
   526                           
   527                           ;LASTRE_TORAL_3-3.c: 62: break;
   528                           
   529                           
   530                           ;LASTRE_TORAL_3-3.c: 64: segment=0x09;
   531  0038  3009               	movlw	9
   532  0039                     L9:	
   533  0039  00A7               	movwf	_segment
   534  003A  3000               	movlw	0
   535  003B  00A8               	movwf	_segment+1
   536                           
   537                           ;LASTRE_TORAL_3-3.c: 65: break;
   538  003C  286B               	goto	i1l34
   539  003D                     i1l659:	
   540                           ;LASTRE_TORAL_3-3.c: 66: case 0x0C:
   541                           
   542  003D                     i1l661:	
   543                           ;LASTRE_TORAL_3-3.c: 69: case 0x0D:
   544                           
   545                           ;LASTRE_TORAL_3-3.c: 68: break;
   546                           
   547                           ;LASTRE_TORAL_3-3.c: 67: segment=0x00;
   548                           
   549  003D                     i1l663:	
   550                           ;LASTRE_TORAL_3-3.c: 72: case 0x0E:
   551                           
   552                           ;LASTRE_TORAL_3-3.c: 71: break;
   553                           
   554                           ;LASTRE_TORAL_3-3.c: 70: segment=0x00;
   555                           
   556                           
   557                           ;LASTRE_TORAL_3-3.c: 73: segment=0x00;
   558  003D  01A7               	clrf	_segment
   559  003E  01A8               	clrf	_segment+1
   560                           
   561                           ;LASTRE_TORAL_3-3.c: 75: }
   562                           
   563                           ;LASTRE_TORAL_3-3.c: 74: break;
   564  003F  286B               	goto	i1l34
   565  0040                     i1l667:	
   566                           
   567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   568                           ; Switch size 1, requested type "space"
   569                           ; Number of cases is 1, Range of values is 0 to 0
   570                           ; switch strategies available:
   571                           ; Name         Instructions Cycles
   572                           ; simple_byte            4     3 (average)
   573                           ; direct_byte           11     8 (fixed)
   574                           ; jumptable            260     6 (fixed)
   575                           ;	Chosen strategy is simple_byte
   576  0040  0877               	movf	ISR@read+1,w
   577  0041  3A00               	xorlw	0	; case 0
   578  0042  1903               	skipnz
   579  0043  2845               	goto	i1l741
   580  0044  286B               	goto	i1l34
   581  0045                     i1l741:	
   582                           
   583                           ; Switch size 1, requested type "space"
   584                           ; Number of cases is 12, Range of values is 0 to 14
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte           37    19 (average)
   588                           ; direct_byte           53     8 (fixed)
   589                           ; jumptable            260     6 (fixed)
   590                           ;	Chosen strategy is simple_byte
   591  0045  0876               	movf	ISR@read,w
   592  0046  3A00               	xorlw	0	; case 0
   593  0047  1903               	skipnz
   594  0048  2828               	goto	i1l641
   595  0049  3A01               	xorlw	1	; case 1
   596  004A  1903               	skipnz
   597  004B  282A               	goto	i1l643
   598  004C  3A03               	xorlw	3	; case 2
   599  004D  1903               	skipnz
   600  004E  282C               	goto	i1l645
   601  004F  3A06               	xorlw	6	; case 4
   602  0050  1903               	skipnz
   603  0051  282E               	goto	i1l647
   604  0052  3A01               	xorlw	1	; case 5
   605  0053  1903               	skipnz
   606  0054  2830               	goto	i1l649
   607  0055  3A03               	xorlw	3	; case 6
   608  0056  1903               	skipnz
   609  0057  2832               	goto	i1l651
   610  0058  3A0E               	xorlw	14	; case 8
   611  0059  1903               	skipnz
   612  005A  2834               	goto	i1l653
   613  005B  3A01               	xorlw	1	; case 9
   614  005C  1903               	skipnz
   615  005D  2836               	goto	i1l655
   616  005E  3A03               	xorlw	3	; case 10
   617  005F  1903               	skipnz
   618  0060  2838               	goto	i1l657
   619  0061  3A06               	xorlw	6	; case 12
   620  0062  1903               	skipnz
   621  0063  283D               	goto	i1l659
   622  0064  3A01               	xorlw	1	; case 13
   623  0065  1903               	skipnz
   624  0066  283D               	goto	i1l661
   625  0067  3A03               	xorlw	3	; case 14
   626  0068  1903               	skipnz
   627  0069  283D               	goto	i1l663
   628  006A  286B               	goto	i1l34
   629  006B                     i1l34:	
   630                           
   631                           ;LASTRE_TORAL_3-3.c: 77: INTF = 0;
   632  006B  108B               	bcf	11,1	;volatile
   633                           
   634                           ;LASTRE_TORAL_3-3.c: 80: }
   635  006C  2871               	goto	i1l46
   636  006D                     i1l31:	
   637                           
   638                           ;LASTRE_TORAL_3-3.c: 81: else if (TMR0IF)
   639  006D  1D0B               	btfss	11,2	;volatile
   640  006E  2871               	goto	i1l46
   641                           
   642                           ;LASTRE_TORAL_3-3.c: 82: {
   643                           ;LASTRE_TORAL_3-3.c: 83: TMR0IF = 0;
   644  006F  110B               	bcf	11,2	;volatile
   645                           
   646                           ;LASTRE_TORAL_3-3.c: 85: count_flag = 1;
   647  0070  1478               	bsf	_count_flag/(0+8),_count_flag& (0+7)
   648  0071                     i1l46:	
   649                           
   650                           ;LASTRE_TORAL_3-3.c: 86: }
   651                           ;LASTRE_TORAL_3-3.c: 88: GIE = 1;
   652  0071  178B               	bsf	11,7	;volatile
   653  0072  0875               	movf	??_ISR+5,w
   654  0073  00FF               	movwf	127
   655  0074  0874               	movf	??_ISR+4,w
   656  0075  008A               	movwf	10
   657  0076  0873               	movf	??_ISR+3,w
   658  0077  0084               	movwf	4
   659  0078  0E72               	swapf	(??_ISR+2)^(0+-128),w
   660  0079  0083               	movwf	3
   661  007A  0EFE               	swapf	126,f
   662  007B  0E7E               	swapf	126,w
   663  007C  0009               	retfie
   664  007D                     __end_of_ISR:	
   665  007E                     btemp	set	126	;btemp
   666  007E                     wtemp	set	126
   667  007E                     wtemp0	set	126
   668  0080                     wtemp1	set	128
   669  0082                     wtemp2	set	130
   670  0084                     wtemp3	set	132
   671  0086                     wtemp4	set	134
   672  0088                     wtemp5	set	136
   673  007F                     wtemp6	set	127
   674  007E                     ttemp	set	126
   675  007E                     ttemp0	set	126
   676  0081                     ttemp1	set	129
   677  0084                     ttemp2	set	132
   678  0087                     ttemp3	set	135
   679  007F                     ttemp4	set	127
   680  007E                     ltemp	set	126
   681  007E                     ltemp0	set	126
   682  0082                     ltemp1	set	130
   683  0086                     ltemp2	set	134
   684  0080                     ltemp3	set	128
   685                           
   686                           	psect	intentry
   687  0004                     __pintentry:	
   688                           ;incstack = 0
   689                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
   690                           
   691  0004                     interrupt_function:	
   692  007E                     saved_w	set	btemp
   693  0004  00FE               	movwf	btemp
   694  0005  0E03               	swapf	3,w
   695  0006  00F2               	movwf	??_ISR+2
   696  0007  0804               	movf	4,w
   697  0008  00F3               	movwf	??_ISR+3
   698  0009  080A               	movf	10,w
   699  000A  00F4               	movwf	??_ISR+4
   700  000B  1283               	bcf	3,5	;RP0=0, select bank0
   701  000C  1303               	bcf	3,6	;RP1=0, select bank0
   702  000D  087F               	movf	btemp+1,w
   703  000E  00F5               	movwf	??_ISR+5
   704  000F  120A  118A  281C   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      7       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     145
                                              5 BANK0      2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2      99
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  8     8      0      23
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       9       5       11.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Feb 21 12:47:01 2023

            __CFG_CP$OFF 0000                       l51 00C6                       u95 00D2  
                    l707 00BB                      l693 0090                      _GIE 005F  
                    u125 009D             __CFG_CPD$OFF 0000                      _ISR 001C  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _PEIE 005E                     _INTE 005C  
                   _INTF 0059                     i1l31 006D                     i1l34 006B  
                   i1l46 0071             __CFG_WRT$OFF 0000                     _main 007D  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l641 0028                    i1l651 0032                    i1l643 002A  
                  i1l741 0045                    i1l661 003D                    i1l653 0034  
                  i1l645 002C                    i1l663 003D                    i1l655 0036  
                  i1l647 002E                    i1l657 0038                    i1l649 0030  
                  i1l659 003D                    i1l667 0040                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000                    _delay 00C2  
                  main@i 0025           __pbitbssCOMMON 03C0                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 00C2                   ??_main 0025                   ?_delay 0020  
                 _TMR0IE 005D                   _TMR0IF 005A                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070            __end_of_delay 00E0  
                ??_delay 0022               __pbssBANK0 0027                  ISR@read 0076  
             __pmaintext 007D               __pintentry 0004               _count_flag 03C0  
                __ptext0 0000                  __ptext1 00C2                  __ptext2 001C  
          delay@of_count 0023             __size_of_ISR 0061                  _segment 0027  
   end_of_initialization 0018      start_initialization 0015              __end_of_ISR 007D  
              ___latbits 0002            __pcstackBANK0 0020           __size_of_delay 001E  
           delay@counter 0020        interrupt_function 0004            __size_of_main 0045  
               intlevel1 0000               _OPTION_REG 0081  
