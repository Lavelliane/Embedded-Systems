

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 14 12:09:43 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  001F                     _ADCON0	set	31
    75  001E                     _ADRESH	set	30
    76  0006                     _PORTB	set	6
    77  0066                     _ADIF	set	102
    78  005F                     _GIE	set	95
    79  00FA                     _GO	set	250
    80  005E                     _PEIE	set	94
    81  009F                     _ADCON1	set	159
    82  009E                     _ADRESL	set	158
    83  0086                     _TRISB	set	134
    84  0466                     _ADIE	set	1126
    85                           
    86                           	psect	text0
    87  0000                     __ptext0:	
    88                           ; #config settings
    89                           
    90                           
    91                           ;psect for function _delay
    92  0000                     
    93                           	psect	cinit
    94  0015                     start_initialization:	
    95  0015                     __initialization:	
    96  0015                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  0015                     __end_of__initialization:	
   100  0015  0183               	clrf	3
   101  0016  120A  118A  28F5   	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	cstackCOMMON
   104  0070                     __pcstackCOMMON:	
   105  0070                     ?_delay:	
   106  0070                     ?_ISR:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_main:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_readADC:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     delay@cnt:	
   116                           ; 2 bytes @ 0x0
   117                           
   118                           
   119                           ; 2 bytes @ 0x0
   120  0070                     	ds	2
   121  0072                     ??_delay:	
   122  0072                     ??_readADC:	
   123                           ; 0 bytes @ 0x2
   124                           
   125                           
   126                           ; 0 bytes @ 0x2
   127  0072                     	ds	2
   128  0074                     readADC@temp:	
   129                           
   130                           ; 2 bytes @ 0x4
   131  0074                     	ds	2
   132  0076                     ??_ISR:	
   133                           
   134                           ; 0 bytes @ 0x6
   135  0076                     	ds	4
   136  007A                     ISR@d_value:	
   137                           
   138                           ; 2 bytes @ 0xA
   139  007A                     	ds	2
   140                           
   141                           	psect	cstackBANK0
   142  0000                     __pcstackBANK0:	
   143  0000                     ??_main:	
   144                           
   145                           	psect	maintext
   146  00F5                     __pmaintext:	
   147                           ; 0 bytes @ 0x0
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 67 in file "Z:\3201\Pre-Midterms\LASTRE_TORAL_LE5-1.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;		None               void
   160 ;; Registers used:
   161 ;;		wreg, status,2
   162 ;; Tracked objects:
   163 ;;		On entry : 17F/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   167 ;;      Params:         0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called:    2
   173 ;; This function calls:
   174 ;;		Nothing
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           
   181                           ;psect for function _main
   182  00F5                     _main:	
   183                           
   184                           ;LASTRE_TORAL_LE5-1.c: 69: TRISB = 0x00;
   185                           
   186                           ;incstack = 0
   187                           ; Regs used in _main: [wreg+status,2]
   188  00F5  1683               	bsf	3,5	;RP0=1, select bank1
   189  00F6  1303               	bcf	3,6	;RP1=0, select bank1
   190  00F7  0186               	clrf	6	;volatile
   191                           
   192                           ;LASTRE_TORAL_LE5-1.c: 70: PORTB = 0x00;
   193  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   194  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   195  00FA  0186               	clrf	6	;volatile
   196                           
   197                           ;LASTRE_TORAL_LE5-1.c: 71: ADCON1 = 0x80;
   198  00FB  3080               	movlw	128
   199  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   200  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   201  00FE  009F               	movwf	31	;volatile
   202                           
   203                           ;LASTRE_TORAL_LE5-1.c: 74: ADCON0 = 0x41;
   204  00FF  3041               	movlw	65
   205  0100  1283               	bcf	3,5	;RP0=0, select bank0
   206  0101  1303               	bcf	3,6	;RP1=0, select bank0
   207  0102  009F               	movwf	31	;volatile
   208                           
   209                           ;LASTRE_TORAL_LE5-1.c: 76: PEIE = 1;
   210  0103  170B               	bsf	11,6	;volatile
   211                           
   212                           ;LASTRE_TORAL_LE5-1.c: 77: ADIE = 1;
   213  0104  1683               	bsf	3,5	;RP0=1, select bank1
   214  0105  1303               	bcf	3,6	;RP1=0, select bank1
   215  0106  170C               	bsf	12,6	;volatile
   216                           
   217                           ;LASTRE_TORAL_LE5-1.c: 78: ADIF = 0;
   218  0107  1283               	bcf	3,5	;RP0=0, select bank0
   219  0108  1303               	bcf	3,6	;RP1=0, select bank0
   220  0109  130C               	bcf	12,6	;volatile
   221                           
   222                           ;LASTRE_TORAL_LE5-1.c: 79: GIE = 1;
   223  010A  178B               	bsf	11,7	;volatile
   224                           
   225                           ;LASTRE_TORAL_LE5-1.c: 80: GO = 1;
   226  010B  151F               	bsf	31,2	;volatile
   227  010C                     l49:	
   228                           ;LASTRE_TORAL_LE5-1.c: 81: for(;;)
   229                           
   230                           
   231                           ;LASTRE_TORAL_LE5-1.c: 82: {
   232                           ;LASTRE_TORAL_LE5-1.c: 84: }
   233  010C  290C               	goto	l49
   234  010D                     __end_of_main:	
   235                           
   236                           	psect	text1
   237  0019                     __ptext1:	
   238 ;; *************** function _ISR *****************
   239 ;; Defined at:
   240 ;;		line 38 in file "Z:\3201\Pre-Midterms\LASTRE_TORAL_LE5-1.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  d_value         2   10[COMMON] int 
   245 ;; Return value:  Size  Location     Type
   246 ;;		None               void
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         2       0       0       0       0
   256 ;;      Temps:          4       0       0       0       0
   257 ;;      Totals:         6       0       0       0       0
   258 ;;Total ram usage:        6 bytes
   259 ;; Hardware stack levels used:    1
   260 ;; Hardware stack levels required when called:    1
   261 ;; This function calls:
   262 ;;		_delay
   263 ;;		_readADC
   264 ;; This function is called by:
   265 ;;		Interrupt level 1
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _ISR
   271  0019                     _ISR:	
   272                           
   273                           ;LASTRE_TORAL_LE5-1.c: 41: GIE = 0;
   274  0019  138B               	bcf	11,7	;volatile
   275                           
   276                           ;LASTRE_TORAL_LE5-1.c: 42: int d_value = 0;
   277  001A  01FA               	clrf	ISR@d_value
   278  001B  01FB               	clrf	ISR@d_value+1
   279                           
   280                           ;LASTRE_TORAL_LE5-1.c: 43: if(ADIF == 1)
   281  001C  1F0C               	btfss	12,6	;volatile
   282  001D  28B5               	goto	i1l570
   283                           
   284                           ;LASTRE_TORAL_LE5-1.c: 44: {
   285                           ;LASTRE_TORAL_LE5-1.c: 46: ADIF = 0;
   286  001E  130C               	bcf	12,6	;volatile
   287                           
   288                           ;LASTRE_TORAL_LE5-1.c: 47: d_value = readADC();
   289  001F  120A  118A  20CD  120A  118A  	fcall	_readADC
   290  0024  0871               	movf	?_readADC+1,w
   291  0025  01FB               	clrf	ISR@d_value+1
   292  0026  07FB               	addwf	ISR@d_value+1,f
   293  0027  0870               	movf	?_readADC,w
   294  0028  01FA               	clrf	ISR@d_value
   295  0029  07FA               	addwf	ISR@d_value,f
   296                           
   297                           ;LASTRE_TORAL_LE5-1.c: 49: if(d_value>=0 && d_value<=169)
   298  002A  1BFB               	btfsc	ISR@d_value+1,7
   299  002B  283B               	goto	i1l540
   300  002C  087B               	movf	ISR@d_value+1,w
   301  002D  3A80               	xorlw	128
   302  002E  00FF               	movwf	127
   303  002F  3080               	movlw	128
   304  0030  027F               	subwf	127,w
   305  0031  1D03               	skipz
   306  0032  2835               	goto	u4_25
   307  0033  30AA               	movlw	170
   308  0034  027A               	subwf	ISR@d_value,w
   309  0035                     u4_25:	
   310  0035  1803               	skipnc
   311  0036  283B               	goto	i1l540
   312                           
   313                           ;LASTRE_TORAL_LE5-1.c: 50: PORTB = 0x00;
   314  0037  1283               	bcf	3,5	;RP0=0, select bank0
   315  0038  1303               	bcf	3,6	;RP1=0, select bank0
   316  0039  0186               	clrf	6	;volatile
   317  003A  28B5               	goto	i1l570
   318  003B                     i1l540:	
   319                           
   320                           ;LASTRE_TORAL_LE5-1.c: 51: else if(d_value>=170 && d_value<=340)
   321  003B  087B               	movf	ISR@d_value+1,w
   322  003C  3A80               	xorlw	128
   323  003D  00FF               	movwf	127
   324  003E  3080               	movlw	128
   325  003F  027F               	subwf	127,w
   326  0040  1D03               	skipz
   327  0041  2844               	goto	u5_25
   328  0042  30AA               	movlw	170
   329  0043  027A               	subwf	ISR@d_value,w
   330  0044                     u5_25:	
   331  0044  1C03               	skipc
   332  0045  2853               	goto	i1l546
   333  0046  087B               	movf	ISR@d_value+1,w
   334  0047  3A80               	xorlw	128
   335  0048  00FF               	movwf	127
   336  0049  3081               	movlw	129
   337  004A  027F               	subwf	127,w
   338  004B  1D03               	skipz
   339  004C  284F               	goto	u6_25
   340  004D  3055               	movlw	85
   341  004E  027A               	subwf	ISR@d_value,w
   342  004F                     u6_25:	
   343  004F  1803               	skipnc
   344  0050  2853               	goto	i1l546
   345                           
   346                           ;LASTRE_TORAL_LE5-1.c: 52: PORTB = 0x01;
   347  0051  3001               	movlw	1
   348  0052  28B2               	goto	L4
   349  0053                     i1l546:	
   350                           
   351                           ;LASTRE_TORAL_LE5-1.c: 53: else if(d_value>=341 && d_value<=511)
   352  0053  087B               	movf	ISR@d_value+1,w
   353  0054  3A80               	xorlw	128
   354  0055  00FF               	movwf	127
   355  0056  3081               	movlw	129
   356  0057  027F               	subwf	127,w
   357  0058  1D03               	skipz
   358  0059  285C               	goto	u7_25
   359  005A  3055               	movlw	85
   360  005B  027A               	subwf	ISR@d_value,w
   361  005C                     u7_25:	
   362  005C  1C03               	skipc
   363  005D  286B               	goto	i1l552
   364  005E  087B               	movf	ISR@d_value+1,w
   365  005F  3A80               	xorlw	128
   366  0060  00FF               	movwf	127
   367  0061  3082               	movlw	130
   368  0062  027F               	subwf	127,w
   369  0063  1D03               	skipz
   370  0064  2867               	goto	u8_25
   371  0065  3000               	movlw	0
   372  0066  027A               	subwf	ISR@d_value,w
   373  0067                     u8_25:	
   374  0067  1803               	skipnc
   375  0068  286B               	goto	i1l552
   376                           
   377                           ;LASTRE_TORAL_LE5-1.c: 54: PORTB = 0x03;
   378  0069  3003               	movlw	3
   379  006A  28B2               	goto	L4
   380  006B                     i1l552:	
   381                           
   382                           ;LASTRE_TORAL_LE5-1.c: 55: else if(d_value>=512 && d_value<=682)
   383  006B  087B               	movf	ISR@d_value+1,w
   384  006C  3A80               	xorlw	128
   385  006D  00FF               	movwf	127
   386  006E  3082               	movlw	130
   387  006F  027F               	subwf	127,w
   388  0070  1D03               	skipz
   389  0071  2874               	goto	u9_25
   390  0072  3000               	movlw	0
   391  0073  027A               	subwf	ISR@d_value,w
   392  0074                     u9_25:	
   393  0074  1C03               	skipc
   394  0075  2883               	goto	i1l558
   395  0076  087B               	movf	ISR@d_value+1,w
   396  0077  3A80               	xorlw	128
   397  0078  00FF               	movwf	127
   398  0079  3082               	movlw	130
   399  007A  027F               	subwf	127,w
   400  007B  1D03               	skipz
   401  007C  287F               	goto	u10_25
   402  007D  30AB               	movlw	171
   403  007E  027A               	subwf	ISR@d_value,w
   404  007F                     u10_25:	
   405  007F  1803               	skipnc
   406  0080  2883               	goto	i1l558
   407                           
   408                           ;LASTRE_TORAL_LE5-1.c: 56: PORTB = 0x07;
   409  0081  3007               	movlw	7
   410  0082  28B2               	goto	L4
   411  0083                     i1l558:	
   412                           
   413                           ;LASTRE_TORAL_LE5-1.c: 57: else if(d_value>=683 && d_value<=853)
   414  0083  087B               	movf	ISR@d_value+1,w
   415  0084  3A80               	xorlw	128
   416  0085  00FF               	movwf	127
   417  0086  3082               	movlw	130
   418  0087  027F               	subwf	127,w
   419  0088  1D03               	skipz
   420  0089  288C               	goto	u11_25
   421  008A  30AB               	movlw	171
   422  008B  027A               	subwf	ISR@d_value,w
   423  008C                     u11_25:	
   424  008C  1C03               	skipc
   425  008D  289B               	goto	i1l564
   426  008E  087B               	movf	ISR@d_value+1,w
   427  008F  3A80               	xorlw	128
   428  0090  00FF               	movwf	127
   429  0091  3083               	movlw	131
   430  0092  027F               	subwf	127,w
   431  0093  1D03               	skipz
   432  0094  2897               	goto	u12_25
   433  0095  3056               	movlw	86
   434  0096  027A               	subwf	ISR@d_value,w
   435  0097                     u12_25:	
   436  0097  1803               	skipnc
   437  0098  289B               	goto	i1l564
   438                           
   439                           ;LASTRE_TORAL_LE5-1.c: 58: PORTB = 0x0F;
   440  0099  300F               	movlw	15
   441  009A  28B2               	goto	L4
   442  009B                     i1l564:	
   443                           
   444                           ;LASTRE_TORAL_LE5-1.c: 59: else if(d_value>=854 && d_value<=1024)
   445  009B  087B               	movf	ISR@d_value+1,w
   446  009C  3A80               	xorlw	128
   447  009D  00FF               	movwf	127
   448  009E  3083               	movlw	131
   449  009F  027F               	subwf	127,w
   450  00A0  1D03               	skipz
   451  00A1  28A4               	goto	u13_25
   452  00A2  3056               	movlw	86
   453  00A3  027A               	subwf	ISR@d_value,w
   454  00A4                     u13_25:	
   455  00A4  1C03               	skipc
   456  00A5  28B5               	goto	i1l570
   457  00A6  087B               	movf	ISR@d_value+1,w
   458  00A7  3A80               	xorlw	128
   459  00A8  00FF               	movwf	127
   460  00A9  3084               	movlw	132
   461  00AA  027F               	subwf	127,w
   462  00AB  1D03               	skipz
   463  00AC  28AF               	goto	u14_25
   464  00AD  3001               	movlw	1
   465  00AE  027A               	subwf	ISR@d_value,w
   466  00AF                     u14_25:	
   467  00AF  1803               	skipnc
   468  00B0  28B5               	goto	i1l570
   469                           
   470                           ;LASTRE_TORAL_LE5-1.c: 60: PORTB = 0x1F;
   471  00B1  301F               	movlw	31
   472  00B2                     L4:	
   473  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   474  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   475  00B4  0086               	movwf	6	;volatile
   476  00B5                     i1l570:	
   477                           
   478                           ;LASTRE_TORAL_LE5-1.c: 61: }
   479                           ;LASTRE_TORAL_LE5-1.c: 62: delay(1000);
   480  00B5  30E8               	movlw	232
   481  00B6  00F0               	movwf	delay@cnt
   482  00B7  3003               	movlw	3
   483  00B8  00F1               	movwf	delay@cnt+1
   484  00B9  120A  118A  210D  120A  118A  	fcall	_delay
   485                           
   486                           ;LASTRE_TORAL_LE5-1.c: 63: GO = 1;
   487  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   488  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   489  00C0  151F               	bsf	31,2	;volatile
   490                           
   491                           ;LASTRE_TORAL_LE5-1.c: 64: GIE = 1;
   492  00C1  178B               	bsf	11,7	;volatile
   493  00C2  0879               	movf	??_ISR+3,w
   494  00C3  00FF               	movwf	127
   495  00C4  0878               	movf	??_ISR+2,w
   496  00C5  008A               	movwf	10
   497  00C6  0877               	movf	??_ISR+1,w
   498  00C7  0084               	movwf	4
   499  00C8  0E76               	swapf	??_ISR^(0+-128),w
   500  00C9  0083               	movwf	3
   501  00CA  0EFE               	swapf	126,f
   502  00CB  0E7E               	swapf	126,w
   503  00CC  0009               	retfie
   504  00CD                     __end_of_ISR:	
   505                           
   506                           	psect	intentry
   507  0004                     __pintentry:	
   508                           ;incstack = 0
   509                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   510                           
   511  0004                     interrupt_function:	
   512  007E                     saved_w	set	btemp
   513  0004  00FE               	movwf	btemp
   514  0005  0E03               	swapf	3,w
   515  0006  00F6               	movwf	??_ISR
   516  0007  0804               	movf	4,w
   517  0008  00F7               	movwf	??_ISR+1
   518  0009  080A               	movf	10,w
   519  000A  00F8               	movwf	??_ISR+2
   520  000B  1283               	bcf	3,5	;RP0=0, select bank0
   521  000C  1303               	bcf	3,6	;RP1=0, select bank0
   522  000D  087F               	movf	btemp+1,w
   523  000E  00F9               	movwf	??_ISR+3
   524  000F  120A  118A  2819   	ljmp	_ISR
   525                           
   526                           	psect	text2
   527  00CD                     __ptext2:	
   528 ;; *************** function _readADC *****************
   529 ;; Defined at:
   530 ;;		line 29 in file "Z:\3201\Pre-Midterms\LASTRE_TORAL_LE5-1.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  temp            2    4[COMMON] int 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  2    0[COMMON] int 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, btemp+1
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         2       0       0       0       0
   545 ;;      Locals:         2       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0
   547 ;;      Totals:         6       0       0       0       0
   548 ;;Total ram usage:        6 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_ISR
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _readADC
   559  00CD                     _readADC:	
   560                           
   561                           ;LASTRE_TORAL_LE5-1.c: 31: int temp = 0;
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
   565  00CD  01F4               	clrf	readADC@temp
   566  00CE  01F5               	clrf	readADC@temp+1
   567                           
   568                           ;LASTRE_TORAL_LE5-1.c: 32: temp = ADRESH;
   569  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   570  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   571  00D1  081E               	movf	30,w	;volatile
   572  00D2  00F2               	movwf	??_readADC
   573  00D3  01F3               	clrf	??_readADC+1
   574  00D4  0872               	movf	??_readADC,w
   575  00D5  00F4               	movwf	readADC@temp
   576  00D6  0873               	movf	??_readADC+1,w
   577  00D7  00F5               	movwf	readADC@temp+1
   578                           
   579                           ;LASTRE_TORAL_LE5-1.c: 33: temp = temp << 8;
   580  00D8  0875               	movf	readADC@temp+1,w
   581  00D9  00F3               	movwf	??_readADC+1
   582  00DA  0874               	movf	readADC@temp,w
   583  00DB  00F2               	movwf	??_readADC
   584  00DC  0872               	movf	??_readADC,w
   585  00DD  00F3               	movwf	??_readADC+1
   586  00DE  01F2               	clrf	??_readADC
   587  00DF  0872               	movf	??_readADC,w
   588  00E0  00F4               	movwf	readADC@temp
   589  00E1  0873               	movf	??_readADC+1,w
   590  00E2  00F5               	movwf	readADC@temp+1
   591                           
   592                           ;LASTRE_TORAL_LE5-1.c: 34: temp = temp | ADRESL;
   593  00E3  0874               	movf	readADC@temp,w
   594  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   595  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   596  00E6  041E               	iorwf	30,w	;volatile
   597  00E7  00F2               	movwf	??_readADC
   598  00E8  0875               	movf	readADC@temp+1,w
   599  00E9  00F3               	movwf	??_readADC+1
   600  00EA  0872               	movf	??_readADC,w
   601  00EB  00F4               	movwf	readADC@temp
   602  00EC  0873               	movf	??_readADC+1,w
   603  00ED  00F5               	movwf	readADC@temp+1
   604                           
   605                           ;LASTRE_TORAL_LE5-1.c: 35: return temp;
   606  00EE  0875               	movf	readADC@temp+1,w
   607  00EF  01F1               	clrf	?_readADC+1
   608  00F0  07F1               	addwf	?_readADC+1,f
   609  00F1  0874               	movf	readADC@temp,w
   610  00F2  01F0               	clrf	?_readADC
   611  00F3  07F0               	addwf	?_readADC,f
   612  00F4  0008               	return
   613  00F5                     __end_of_readADC:	
   614                           
   615                           	psect	text3
   616  010D                     __ptext3:	
   617 ;; *************** function _delay *****************
   618 ;; Defined at:
   619 ;;		line 24 in file "Z:\3201\Pre-Midterms\LASTRE_TORAL_LE5-1.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  cnt             2    0[COMMON] int 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;		None               void
   626 ;; Registers used:
   627 ;;		wreg
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         2       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         2       0       0       0       0
   637 ;;Total ram usage:        2 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_ISR
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _delay
   648  010D                     _delay:	
   649  010D                     i1l510:	
   650                           ;LASTRE_TORAL_LE5-1.c: 26: while(cnt--);
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in _delay: [wreg]
   654                           
   655  010D  30FF               	movlw	255
   656  010E  07F0               	addwf	delay@cnt,f
   657  010F  1803               	skipnc
   658  0110  0AF1               	incf	delay@cnt+1,f
   659  0111  30FF               	movlw	255
   660  0112  07F1               	addwf	delay@cnt+1,f
   661  0113  30FF               	movlw	255
   662  0114  0671               	xorwf	delay@cnt+1,w
   663  0115  1D03               	skipz
   664  0116  2919               	goto	u1_25
   665  0117  30FF               	movlw	255
   666  0118  0670               	xorwf	delay@cnt,w
   667  0119                     u1_25:	
   668  0119  1903               	btfsc	3,2
   669  011A  0008               	return
   670  011B  290D               	goto	i1l510
   671  011C                     __end_of_delay:	
   672  007E                     btemp	set	126	;btemp
   673  007E                     wtemp	set	126
   674  007E                     wtemp0	set	126
   675  0080                     wtemp1	set	128
   676  0082                     wtemp2	set	130
   677  0084                     wtemp3	set	132
   678  0086                     wtemp4	set	134
   679  0088                     wtemp5	set	136
   680  007F                     wtemp6	set	127
   681  007E                     ttemp	set	126
   682  007E                     ttemp0	set	126
   683  0081                     ttemp1	set	129
   684  0084                     ttemp2	set	132
   685  0087                     ttemp3	set	135
   686  007F                     ttemp4	set	127
   687  007E                     ltemp	set	126
   688  007E                     ltemp0	set	126
   689  0082                     ltemp1	set	130
   690  0086                     ltemp2	set	134
   691  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_readADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0     283
                                              6 COMMON     6     6      0
                              _delay
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2      58
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _delay
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 14 12:09:43 2023

            __CFG_CP$OFF 0000                       l49 010C                       _GO 00FA  
                    _GIE 005F             __CFG_CPD$OFF 0000                      _ISR 0019  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _ADIE 0466                     _ADIF 0066  
                   _PEIE 005E                     u1_25 0119                     u4_25 0035  
                   u5_25 0044                     u6_25 004F                     u7_25 005C  
                   u8_25 0067                     u9_25 0074             __CFG_WRT$OFF 0000  
                   _main 00F5                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0076                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l510 010D                    i1l540 003B  
                  i1l552 006B                    i1l546 0053                    i1l570 00B5  
                  i1l564 009B                    i1l558 0083                    u10_25 007F  
                  u11_25 008C                    u12_25 0097                    u13_25 00A4  
                  u14_25 00AF                    _PORTB 0006                    _TRISB 0086  
          __CFG_PWRTE$ON 0000          __end_of_readADC 00F5                    _delay 010D  
            readADC@temp 0074                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 010D  
                 ??_main 0000                   ?_delay 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
              ??_readADC 0072                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0070            __end_of_delay 011C                  ??_delay 0072  
             __pmaintext 00F5               __pintentry 0004                  __ptext0 0000  
                __ptext1 0019                  __ptext2 00CD                  __ptext3 010D  
                _readADC 00CD             __size_of_ISR 00B4     end_of_initialization 0015  
    start_initialization 0015              __end_of_ISR 00CD                ___latbits 0002  
          __pcstackBANK0 0000               ISR@d_value 007A                 ?_readADC 0070  
         __size_of_delay 000F        interrupt_function 0004         __size_of_readADC 0028  
          __size_of_main 0018                 delay@cnt 0070                 intlevel1 0000  
