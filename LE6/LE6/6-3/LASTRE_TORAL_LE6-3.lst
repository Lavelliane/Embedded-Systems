

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 23 10:55:08 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73                           
    74                           	psect	idataBANK0
    75  0721                     __pidataBANK0:	
    76                           
    77                           ;initializer for main@F1098
    78  0721  3459               	retlw	89
    79  0722  346F               	retlw	111
    80  0723  3475               	retlw	117
    81  0724  3420               	retlw	32
    82  0725  3450               	retlw	80
    83  0726  3472               	retlw	114
    84  0727  3465               	retlw	101
    85  0728  3473               	retlw	115
    86  0729  3473               	retlw	115
    87  072A  3465               	retlw	101
    88  072B  3464               	retlw	100
    89  072C  3420               	retlw	32
    90  072D  3420               	retlw	32
    91  072E  342E               	retlw	46
    92  072F  340D               	retlw	13
    93  0730  340A               	retlw	10
    94  0006                     _PORTB	set	6
    95  0019                     _TXREG	set	25
    96  0034                     _RB4	set	52
    97  00C7                     _SPEN	set	199
    98  0099                     _SPBRG	set	153
    99  0086                     _TRISB	set	134
   100  04C2                     _BRGH	set	1218
   101  04C4                     _SYNC	set	1220
   102  04C1                     _TRMT	set	1217
   103  04C6                     _TX9	set	1222
   104  04C5                     _TXEN	set	1221
   105                           
   106                           	psect	cinit
   107  07F0                     start_initialization:	
   108                           ; #config settings
   109                           
   110  07F0                     __initialization:	
   111                           
   112                           ; Initialize objects allocated to BANK0
   113  07F0  1383               	bcf	3,7	;select IRP bank0
   114  07F1  3042               	movlw	low (__pdataBANK0+16)
   115  07F2  00FD               	movwf	btemp+-1
   116  07F3  3007               	movlw	high __pidataBANK0
   117  07F4  00FE               	movwf	btemp
   118  07F5  3021               	movlw	low __pidataBANK0
   119  07F6  00FF               	movwf	btemp+1
   120  07F7  3032               	movlw	low __pdataBANK0
   121  07F8  0084               	movwf	4
   122  07F9  120A  118A  2735   	fcall	init_ram0
   123  07FC                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  07FC                     __end_of__initialization:	
   127  07FC  0183               	clrf	3
   128  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   129                           
   130                           	psect	dataBANK0
   131  0032                     __pdataBANK0:	
   132  0032                     main@F1098:	
   133  0032                     	ds	16
   134                           
   135                           	psect	inittext
   136  0731                     init_fetch0:	
   137                           ;	Called with low address in FSR and high address in W
   138                           
   139  0731  087E               	movf	126,w
   140  0732  008A               	movwf	10
   141  0733  087F               	movf	127,w
   142  0734  0082               	movwf	2
   143  0735                     init_ram0:	
   144                           ;Called with:
   145                           ;	high address of idata address in btemp 
   146                           ;	low address of idata address in btemp+1 
   147                           ;	low address of data in FSR
   148                           ;	high address + 1 of data in btemp-1
   149                           
   150  0735  2731  120A  118A   	fcall	init_fetch0
   151  0738  0080               	movwf	0
   152  0739  0A84               	incf	4,f
   153  073A  0804               	movf	4,w
   154  073B  067D               	xorwf	125,w
   155  073C  1903               	btfsc	3,2
   156  073D  3400               	retlw	0
   157  073E  0AFF               	incf	127,f
   158  073F  1903               	btfsc	3,2
   159  0740  0AFE               	incf	126,f
   160  0741  2F35               	goto	init_ram0
   161                           
   162                           	psect	cstackCOMMON
   163  0070                     __pcstackCOMMON:	
   164  0070                     ??_checkInput:	
   165  0070                     ?_main:	
   166                           ; 0 bytes @ 0x0
   167                           
   168  0070                     ?_checkInput:	
   169                           ; 0 bytes @ 0x0
   170                           
   171                           
   172                           ; 1 bytes @ 0x0
   173  0070                     	ds	1
   174  0071                     checkInput@data:	
   175                           
   176                           ; 1 bytes @ 0x1
   177  0071                     	ds	1
   178  0072                     checkInput@output:	
   179                           
   180                           ; 1 bytes @ 0x2
   181  0072                     	ds	1
   182  0073                     ??_main:	
   183                           
   184                           ; 0 bytes @ 0x3
   185  0073                     	ds	4
   186                           
   187                           	psect	cstackBANK0
   188  0020                     __pcstackBANK0:	
   189  0020                     main@data:	
   190                           
   191                           ; 16 bytes @ 0x0
   192  0020                     	ds	16
   193  0030                     main@i:	
   194                           
   195                           ; 2 bytes @ 0x10
   196  0030                     	ds	2
   197                           
   198                           	psect	maintext
   199  078D                     __pmaintext:	
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 27 in file "Z:\3201\LE6\6-3\LASTRE_TORAL_6-3.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;  data           16    0[BANK0 ] unsigned char [16]
   210 ;;  i               2   16[BANK0 ] int 
   211 ;; Return value:  Size  Location     Type
   212 ;;		None               void
   213 ;; Registers used:
   214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 17F/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   220 ;;      Params:         0       0       0       0       0
   221 ;;      Locals:         0      18       0       0       0
   222 ;;      Temps:          4       0       0       0       0
   223 ;;      Totals:         4      18       0       0       0
   224 ;;Total ram usage:       22 bytes
   225 ;; Hardware stack levels required when called:    1
   226 ;; This function calls:
   227 ;;		_checkInput
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           
   234                           ;psect for function _main
   235  078D                     _main:	
   236                           
   237                           ;LASTRE_TORAL_6-3.c: 29: SPBRG = 0x19;
   238                           
   239                           ;incstack = 0
   240                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   241  078D  3019               	movlw	25
   242  078E  1683               	bsf	3,5	;RP0=1, select bank1
   243  078F  1303               	bcf	3,6	;RP1=0, select bank1
   244  0790  0099               	movwf	25	;volatile
   245                           
   246                           ;LASTRE_TORAL_6-3.c: 31: SYNC = 0;
   247  0791  1218               	bcf	24,4	;volatile
   248                           
   249                           ;LASTRE_TORAL_6-3.c: 32: SPEN = 1;
   250  0792  1283               	bcf	3,5	;RP0=0, select bank0
   251  0793  1303               	bcf	3,6	;RP1=0, select bank0
   252  0794  1798               	bsf	24,7	;volatile
   253                           
   254                           ;LASTRE_TORAL_6-3.c: 33: TX9 = 0;
   255  0795  1683               	bsf	3,5	;RP0=1, select bank1
   256  0796  1303               	bcf	3,6	;RP1=0, select bank1
   257  0797  1318               	bcf	24,6	;volatile
   258                           
   259                           ;LASTRE_TORAL_6-3.c: 34: BRGH = 1;
   260  0798  1518               	bsf	24,2	;volatile
   261                           
   262                           ;LASTRE_TORAL_6-3.c: 35: TXEN = 1;
   263  0799  1698               	bsf	24,5	;volatile
   264                           
   265                           ;LASTRE_TORAL_6-3.c: 37: TRISB = 0xFF;
   266  079A  30FF               	movlw	255
   267  079B  0086               	movwf	6	;volatile
   268                           
   269                           ;LASTRE_TORAL_6-3.c: 38: int i = 0;
   270  079C  1283               	bcf	3,5	;RP0=0, select bank0
   271  079D  1303               	bcf	3,6	;RP1=0, select bank0
   272  079E  01B0               	clrf	main@i
   273  079F  01B1               	clrf	main@i+1
   274                           
   275                           ;LASTRE_TORAL_6-3.c: 39: unsigned char data[16] = {'Y','o','u',' ','P','r','e','s','s','
      +                          e','d',' ',' ','.','\r','\n'};
   276  07A0  3020               	movlw	main@data& (0+255)
   277  07A1  0084               	movwf	4
   278  07A2  3032               	movlw	low main@F1098
   279  07A3  00F3               	movwf	??_main
   280  07A4  0804               	movf	4,w
   281  07A5  00F4               	movwf	??_main+1
   282  07A6  3010               	movlw	16
   283  07A7  00F5               	movwf	??_main+2
   284  07A8                     u70:	
   285  07A8  0873               	movf	??_main,w
   286  07A9  0084               	movwf	4
   287  07AA  1383               	bcf	3,7	;select IRP bank0
   288  07AB  0800               	movf	0,w
   289  07AC  00F6               	movwf	??_main+3
   290  07AD  0AF3               	incf	??_main,f
   291  07AE  0874               	movf	??_main+1,w
   292  07AF  0084               	movwf	4
   293  07B0  0876               	movf	??_main+3,w
   294  07B1  0080               	movwf	0
   295  07B2  0AF4               	incf	??_main+1,f
   296  07B3  0BF5               	decfsz	??_main+2,f
   297  07B4  2FA8               	goto	u70
   298  07B5                     l628:	
   299                           ;LASTRE_TORAL_6-3.c: 40: for(;;)
   300                           
   301                           
   302                           ;LASTRE_TORAL_6-3.c: 41: {
   303                           ;LASTRE_TORAL_6-3.c: 42: if(RB4==1) {
   304  07B5  1E06               	btfss	6,4	;volatile
   305  07B6  2FB5               	goto	l628
   306                           
   307                           ;LASTRE_TORAL_6-3.c: 43: data[12] = checkInput();
   308  07B7  120A  118A  2742  120A  118A  	fcall	_checkInput
   309  07BC  00F3               	movwf	??_main
   310  07BD  0873               	movf	??_main,w
   311  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   312  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   313  07C0  00AC               	movwf	main@data+12
   314                           
   315                           ;LASTRE_TORAL_6-3.c: 44: for(i=0;i<16;i++) {
   316  07C1  01B0               	clrf	main@i
   317  07C2  01B1               	clrf	main@i+1
   318  07C3  0831               	movf	main@i+1,w
   319  07C4  3A80               	xorlw	128
   320  07C5  00FF               	movwf	127
   321  07C6  3080               	movlw	128
   322  07C7  027F               	subwf	127,w
   323  07C8  1D03               	skipz
   324  07C9  2FCC               	goto	u95
   325  07CA  3010               	movlw	16
   326  07CB  0230               	subwf	main@i,w
   327  07CC                     u95:	
   328  07CC  1803               	btfsc	3,0
   329  07CD  2FEB               	goto	l51
   330  07CE                     l48:	
   331                           ;LASTRE_TORAL_6-3.c: 45: while(!TRMT);
   332                           
   333  07CE  1683               	bsf	3,5	;RP0=1, select bank1
   334  07CF  1303               	bcf	3,6	;RP1=0, select bank1
   335  07D0  1C98               	btfss	24,1	;volatile
   336  07D1  2FCE               	goto	l48
   337                           
   338                           ;LASTRE_TORAL_6-3.c: 46: TXREG = data[i];
   339  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   340  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   341  07D4  0830               	movf	main@i,w
   342  07D5  3E20               	addlw	main@data& (0+255)
   343  07D6  0084               	movwf	4
   344  07D7  1383               	bcf	3,7	;select IRP bank0
   345  07D8  0800               	movf	0,w
   346  07D9  0099               	movwf	25	;volatile
   347  07DA  3001               	movlw	1
   348  07DB  07B0               	addwf	main@i,f
   349  07DC  1803               	skipnc
   350  07DD  0AB1               	incf	main@i+1,f
   351  07DE  3000               	movlw	0
   352  07DF  07B1               	addwf	main@i+1,f
   353  07E0  0831               	movf	main@i+1,w
   354  07E1  3A80               	xorlw	128
   355  07E2  00FF               	movwf	127
   356  07E3  3080               	movlw	128
   357  07E4  027F               	subwf	127,w
   358  07E5  1D03               	skipz
   359  07E6  2FE9               	goto	u115
   360  07E7  3010               	movlw	16
   361  07E8  0230               	subwf	main@i,w
   362  07E9                     u115:	
   363  07E9  1C03               	skipc
   364  07EA  2FCE               	goto	l48
   365  07EB                     l51:	
   366                           ;LASTRE_TORAL_6-3.c: 47: }
   367                           ;LASTRE_TORAL_6-3.c: 48: while(RB4==1);
   368                           
   369  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   370  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   371  07ED  1E06               	btfss	6,4	;volatile
   372  07EE  2FB5               	goto	l628
   373  07EF  2FEB               	goto	l51
   374  07F0                     __end_of_main:	
   375                           ;LASTRE_TORAL_6-3.c: 49: }
   376                           ;LASTRE_TORAL_6-3.c: 50: }
   377                           
   378                           
   379                           	psect	text1
   380  0742                     __ptext1:	
   381 ;; *************** function _checkInput *****************
   382 ;; Defined at:
   383 ;;		line 3 in file "Z:\3201\LE6\6-3\LASTRE_TORAL_6-3.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  output          1    2[COMMON] unsigned char 
   388 ;;  data            1    1[COMMON] unsigned char 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      unsigned char 
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         2       0       0       0       0
   400 ;;      Temps:          1       0       0       0       0
   401 ;;      Totals:         3       0       0       0       0
   402 ;;Total ram usage:        3 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _checkInput
   413  0742                     _checkInput:	
   414                           
   415                           ;LASTRE_TORAL_6-3.c: 4: unsigned char data, output;
   416                           ;LASTRE_TORAL_6-3.c: 5: data = PORTB & 0x0F;
   417                           
   418                           ;incstack = 0
   419                           ; Regs used in _checkInput: [wreg-fsr0h+status,2+status,0]
   420  0742  1283               	bcf	3,5	;RP0=0, select bank0
   421  0743  1303               	bcf	3,6	;RP1=0, select bank0
   422  0744  0806               	movf	6,w	;volatile
   423  0745  390F               	andlw	15
   424  0746  00F0               	movwf	??_checkInput
   425  0747  0870               	movf	??_checkInput,w
   426  0748  00F1               	movwf	checkInput@data
   427                           
   428                           ;LASTRE_TORAL_6-3.c: 7: switch(data)
   429  0749  2F65               	goto	l606
   430  074A                     l580:	
   431                           ;LASTRE_TORAL_6-3.c: 8: {
   432                           ;LASTRE_TORAL_6-3.c: 9: case 0x00: output='1'; break;
   433                           
   434  074A  3031               	movlw	49
   435  074B  2F61               	goto	L11
   436  074C                     l582:	
   437                           ;LASTRE_TORAL_6-3.c: 10: case 0x01: output='2'; break;
   438                           
   439  074C  3032               	movlw	50
   440  074D  2F61               	goto	L11
   441  074E                     l584:	
   442                           ;LASTRE_TORAL_6-3.c: 11: case 0x02: output='3'; break;
   443                           
   444  074E  3033               	movlw	51
   445  074F  2F61               	goto	L11
   446  0750                     l586:	
   447                           ;LASTRE_TORAL_6-3.c: 12: case 0x04: output='4'; break;
   448                           
   449  0750  3034               	movlw	52
   450  0751  2F61               	goto	L11
   451  0752                     l588:	
   452                           ;LASTRE_TORAL_6-3.c: 13: case 0x05: output='5'; break;
   453                           
   454  0752  3035               	movlw	53
   455  0753  2F61               	goto	L11
   456  0754                     l590:	
   457                           ;LASTRE_TORAL_6-3.c: 14: case 0x06: output='6'; break;
   458                           
   459  0754  3036               	movlw	54
   460  0755  2F61               	goto	L11
   461  0756                     l592:	
   462                           ;LASTRE_TORAL_6-3.c: 15: case 0x08: output='7'; break;
   463                           
   464  0756  3037               	movlw	55
   465  0757  2F61               	goto	L11
   466  0758                     l594:	
   467                           ;LASTRE_TORAL_6-3.c: 16: case 0x09: output='8'; break;
   468                           
   469  0758  3038               	movlw	56
   470  0759  2F61               	goto	L11
   471  075A                     l596:	
   472                           ;LASTRE_TORAL_6-3.c: 17: case 0x0A: output='9'; break;
   473                           
   474  075A  3039               	movlw	57
   475  075B  2F61               	goto	L11
   476  075C                     l598:	
   477                           ;LASTRE_TORAL_6-3.c: 18: case 0x0C: output='*'; break;
   478                           
   479  075C  302A               	movlw	42
   480  075D  2F61               	goto	L11
   481  075E                     l600:	
   482                           ;LASTRE_TORAL_6-3.c: 19: case 0x0D: output='0'; break;
   483                           
   484  075E  3030               	movlw	48
   485  075F  2F61               	goto	L11
   486  0760                     l602:	
   487                           ;LASTRE_TORAL_6-3.c: 20: case 0x0E: output='#'; break;
   488                           
   489  0760  3023               	movlw	35
   490  0761                     L11:	
   491  0761  00F0               	movwf	??_checkInput
   492  0762  0870               	movf	??_checkInput,w
   493  0763  00F2               	movwf	checkInput@output
   494                           
   495                           ;LASTRE_TORAL_6-3.c: 22: }
   496  0764  2F8B               	goto	l608
   497  0765                     l606:	
   498  0765  0871               	movf	checkInput@data,w
   499                           
   500                           ; Switch size 1, requested type "space"
   501                           ; Number of cases is 12, Range of values is 0 to 14
   502                           ; switch strategies available:
   503                           ; Name         Instructions Cycles
   504                           ; simple_byte           37    19 (average)
   505                           ; direct_byte           53     8 (fixed)
   506                           ; jumptable            260     6 (fixed)
   507                           ;	Chosen strategy is simple_byte
   508  0766  3A00               	xorlw	0	; case 0
   509  0767  1903               	skipnz
   510  0768  2F4A               	goto	l580
   511  0769  3A01               	xorlw	1	; case 1
   512  076A  1903               	skipnz
   513  076B  2F4C               	goto	l582
   514  076C  3A03               	xorlw	3	; case 2
   515  076D  1903               	skipnz
   516  076E  2F4E               	goto	l584
   517  076F  3A06               	xorlw	6	; case 4
   518  0770  1903               	skipnz
   519  0771  2F50               	goto	l586
   520  0772  3A01               	xorlw	1	; case 5
   521  0773  1903               	skipnz
   522  0774  2F52               	goto	l588
   523  0775  3A03               	xorlw	3	; case 6
   524  0776  1903               	skipnz
   525  0777  2F54               	goto	l590
   526  0778  3A0E               	xorlw	14	; case 8
   527  0779  1903               	skipnz
   528  077A  2F56               	goto	l592
   529  077B  3A01               	xorlw	1	; case 9
   530  077C  1903               	skipnz
   531  077D  2F58               	goto	l594
   532  077E  3A03               	xorlw	3	; case 10
   533  077F  1903               	skipnz
   534  0780  2F5A               	goto	l596
   535  0781  3A06               	xorlw	6	; case 12
   536  0782  1903               	skipnz
   537  0783  2F5C               	goto	l598
   538  0784  3A01               	xorlw	1	; case 13
   539  0785  1903               	skipnz
   540  0786  2F5E               	goto	l600
   541  0787  3A03               	xorlw	3	; case 14
   542  0788  1903               	skipnz
   543  0789  2F60               	goto	l602
   544  078A  2F8B               	goto	l608
   545  078B                     l608:	
   546                           
   547                           ;LASTRE_TORAL_6-3.c: 24: return output;
   548  078B  0872               	movf	checkInput@output,w
   549  078C  0008               	return
   550  078D                     __end_of_checkInput:	
   551  007E                     btemp	set	126	;btemp
   552  007E                     wtemp	set	126
   553  007E                     wtemp0	set	126
   554  0080                     wtemp1	set	128
   555  0082                     wtemp2	set	130
   556  0084                     wtemp3	set	132
   557  0086                     wtemp4	set	134
   558  0088                     wtemp5	set	136
   559  007F                     wtemp6	set	127
   560  007E                     ttemp	set	126
   561  007E                     ttemp0	set	126
   562  0081                     ttemp1	set	129
   563  0084                     ttemp2	set	132
   564  0087                     ttemp3	set	135
   565  007F                     ttemp4	set	127
   566  007E                     ltemp	set	126
   567  007E                     ltemp0	set	126
   568  0082                     ltemp1	set	130
   569  0086                     ltemp2	set	134
   570  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     18      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_checkInput

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     174
                                              3 COMMON     4     4      0
                                              0 BANK0     18    18      0
                         _checkInput
 ---------------------------------------------------------------------------------
 (1) _checkInput                                           3     3      0      57
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 23 10:55:08 2023

                      pc 0002                       l51 07EB                       l48 07CE  
                     u70 07A8                       u95 07CC                       fsr 0004  
                    l600 075E                      l602 0760                      l606 0765  
                    l608 078B                      l580 074A                      l628 07B5  
                    l590 0754                      l582 074C                      l592 0756  
                    l584 074E                      l594 0758                      l586 0750  
                    l596 075A                      l588 0752                      l598 075C  
                    _RB4 0034                      u115 07E9                      _TX9 04C6  
                    fsr0 0004                      indf 0000                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 078D                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  main@i 0030                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07F0             __end_of_main 07F0  
                 ??_main 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0721               _checkInput 0742               __pmaintext 078D  
                __ptext1 0742              ?_checkInput 0070     end_of_initialization 07FC  
         checkInput@data 0071      __size_of_checkInput 004B      start_initialization 07F0  
             init_fetch0 0731              __pdataBANK0 0032                ___latbits 0002  
          __pcstackBANK0 0020             ??_checkInput 0070                main@F1098 0032  
     __end_of_checkInput 078D         checkInput@output 0072            __size_of_main 0063  
               main@data 0020                 init_ram0 0735  
