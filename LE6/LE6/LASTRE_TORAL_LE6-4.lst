

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 23 11:22:54 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001D                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  010E                     	;# 
    67  010F                     	;# 
    68  018C                     	;# 
    69  018D                     	;# 
    70  0006                     _PORTB	set	6
    71  0019                     _TXREG	set	25
    72  0034                     _RB4	set	52
    73  00C7                     _SPEN	set	199
    74  0099                     _SPBRG	set	153
    75  0086                     _TRISB	set	134
    76  04C2                     _BRGH	set	1218
    77  04C4                     _SYNC	set	1220
    78  04C1                     _TRMT	set	1217
    79  04C6                     _TX9	set	1222
    80  04C5                     _TXEN	set	1221
    81                           
    82                           	psect	text0
    83  0000                     __ptext0:	
    84                           ; #config settings
    85                           
    86                           
    87                           	psect	cinit
    88  07FC                     start_initialization:	
    89                           ;psect for function _checkInput
    90                           
    91  07FC                     __initialization:	
    92  07FC                     end_of_initialization:	
    93                           ;End of C runtime variable initialization code
    94                           
    95  07FC                     __end_of__initialization:	
    96  07FC  0183               	clrf	3
    97  07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
    98                           
    99                           	psect	cstackCOMMON
   100  0070                     __pcstackCOMMON:	
   101  0070                     ?_main:	
   102  0070                     ?_checkInput:	
   103                           ; 0 bytes @ 0x0
   104                           
   105                           
   106                           ; 2 bytes @ 0x0
   107  0070                     	ds	2
   108  0072                     ??_checkInput:	
   109                           
   110                           ; 0 bytes @ 0x2
   111  0072                     	ds	2
   112  0074                     checkInput@data:	
   113                           
   114                           ; 2 bytes @ 0x4
   115  0074                     	ds	2
   116  0076                     checkInput@output:	
   117                           
   118                           ; 2 bytes @ 0x6
   119  0076                     	ds	2
   120  0078                     ??_main:	
   121  0078                     main@i:	
   122                           ; 0 bytes @ 0x8
   123                           
   124                           
   125                           ; 2 bytes @ 0x8
   126  0078                     	ds	2
   127                           
   128                           	psect	maintext
   129  0783                     __pmaintext:	
   130 ;;
   131 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   132 ;;
   133 ;; *************** function _main *****************
   134 ;; Defined at:
   135 ;;		line 27 in file "Z:\3201\LE6\6-4\LASTRE_TORAL_LE6-4TX.c"
   136 ;; Parameters:    Size  Location     Type
   137 ;;		None
   138 ;; Auto vars:     Size  Location     Type
   139 ;;  i               2    8[COMMON] int 
   140 ;; Return value:  Size  Location     Type
   141 ;;		None               void
   142 ;; Registers used:
   143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   144 ;; Tracked objects:
   145 ;;		On entry : 17F/0
   146 ;;		On exit  : 0/0
   147 ;;		Unchanged: 0/0
   148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   149 ;;      Params:         0       0       0       0       0
   150 ;;      Locals:         2       0       0       0       0
   151 ;;      Temps:          0       0       0       0       0
   152 ;;      Totals:         2       0       0       0       0
   153 ;;Total ram usage:        2 bytes
   154 ;; Hardware stack levels required when called:    1
   155 ;; This function calls:
   156 ;;		_checkInput
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           
   163                           ;psect for function _main
   164  0783                     _main:	
   165                           
   166                           ;LASTRE_TORAL_LE6-4TX.c: 29: SPBRG = 0x19;
   167                           
   168                           ;incstack = 0
   169                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   170  0783  3019               	movlw	25
   171  0784  1683               	bsf	3,5	;RP0=1, select bank1
   172  0785  1303               	bcf	3,6	;RP1=0, select bank1
   173  0786  0099               	movwf	25	;volatile
   174                           
   175                           ;LASTRE_TORAL_LE6-4TX.c: 31: SYNC = 0;
   176  0787  1218               	bcf	24,4	;volatile
   177                           
   178                           ;LASTRE_TORAL_LE6-4TX.c: 32: SPEN = 1;
   179  0788  1283               	bcf	3,5	;RP0=0, select bank0
   180  0789  1303               	bcf	3,6	;RP1=0, select bank0
   181  078A  1798               	bsf	24,7	;volatile
   182                           
   183                           ;LASTRE_TORAL_LE6-4TX.c: 33: TX9 = 0;
   184  078B  1683               	bsf	3,5	;RP0=1, select bank1
   185  078C  1303               	bcf	3,6	;RP1=0, select bank1
   186  078D  1318               	bcf	24,6	;volatile
   187                           
   188                           ;LASTRE_TORAL_LE6-4TX.c: 34: BRGH = 1;
   189  078E  1518               	bsf	24,2	;volatile
   190                           
   191                           ;LASTRE_TORAL_LE6-4TX.c: 35: TXEN = 1;
   192  078F  1698               	bsf	24,5	;volatile
   193                           
   194                           ;LASTRE_TORAL_LE6-4TX.c: 36: TRISB = 0xFF;
   195  0790  30FF               	movlw	255
   196  0791  0086               	movwf	6	;volatile
   197                           
   198                           ;LASTRE_TORAL_LE6-4TX.c: 37: int i=0;
   199  0792  01F8               	clrf	main@i
   200  0793  01F9               	clrf	main@i+1
   201  0794                     l556:	
   202                           ;LASTRE_TORAL_LE6-4TX.c: 38: for(;;)
   203                           
   204                           
   205                           ;LASTRE_TORAL_LE6-4TX.c: 39: {
   206                           ;LASTRE_TORAL_LE6-4TX.c: 40: if(RB4==1) {
   207  0794  1283               	bcf	3,5	;RP0=0, select bank0
   208  0795  1E06               	btfss	6,4	;volatile
   209  0796  2FA4               	goto	l47
   210  0797                     l44:	
   211                           ;LASTRE_TORAL_LE6-4TX.c: 42: while(!TRMT);
   212                           
   213  0797  1683               	bsf	3,5	;RP0=1, select bank1
   214  0798  1303               	bcf	3,6	;RP1=0, select bank1
   215  0799  1C98               	btfss	24,1	;volatile
   216  079A  2F97               	goto	l44
   217                           
   218                           ;LASTRE_TORAL_LE6-4TX.c: 43: TXREG = checkInput();
   219  079B  120A  118A  27A7  120A  118A  	fcall	_checkInput
   220  07A0  0870               	movf	?_checkInput,w
   221  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   222  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   223  07A3  0099               	movwf	25	;volatile
   224  07A4                     l47:	
   225                           ;LASTRE_TORAL_LE6-4TX.c: 44: }while(RB4==1);
   226                           
   227  07A4  1E06               	btfss	6,4	;volatile
   228  07A5  2F94               	goto	l556
   229  07A6  2FA4               	goto	l47
   230  07A7                     __end_of_main:	
   231                           ;LASTRE_TORAL_LE6-4TX.c: 45: }
   232                           
   233                           
   234                           	psect	text1
   235  07A7                     __ptext1:	
   236 ;; *************** function _checkInput *****************
   237 ;; Defined at:
   238 ;;		line 3 in file "Z:\3201\LE6\6-4\LASTRE_TORAL_LE6-4TX.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  output          2    6[COMMON] unsigned int 
   243 ;;  data            2    4[COMMON] unsigned int 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  2    0[COMMON] int 
   246 ;; Registers used:
   247 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   253 ;;      Params:         2       0       0       0       0
   254 ;;      Locals:         4       0       0       0       0
   255 ;;      Temps:          2       0       0       0       0
   256 ;;      Totals:         8       0       0       0       0
   257 ;;Total ram usage:        8 bytes
   258 ;; Hardware stack levels used:    1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _checkInput
   268  07A7                     _checkInput:	
   269                           
   270                           ;LASTRE_TORAL_LE6-4TX.c: 5: unsigned int data, output;
   271                           ;LASTRE_TORAL_LE6-4TX.c: 6: data = PORTB & 0x0F;
   272                           
   273                           ;incstack = 0
   274                           ; Regs used in _checkInput: [wreg-fsr0h+status,2+status,0]
   275  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   276  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   277  07A9  0806               	movf	6,w	;volatile
   278  07AA  390F               	andlw	15
   279  07AB  00F2               	movwf	??_checkInput
   280  07AC  01F3               	clrf	??_checkInput+1
   281  07AD  0872               	movf	??_checkInput,w
   282  07AE  00F4               	movwf	checkInput@data
   283  07AF  0873               	movf	??_checkInput+1,w
   284  07B0  00F5               	movwf	checkInput@data+1
   285                           
   286                           ;LASTRE_TORAL_LE6-4TX.c: 8: switch(data)
   287  07B1  2FCA               	goto	l532
   288  07B2                     l510:	
   289                           ;LASTRE_TORAL_LE6-4TX.c: 9: {
   290                           ;LASTRE_TORAL_LE6-4TX.c: 10: case 0x00: output=0x01; break;
   291                           
   292  07B2  3001               	movlw	1
   293  07B3  2FC3               	goto	L8
   294  07B4                     l512:	
   295                           ;LASTRE_TORAL_LE6-4TX.c: 11: case 0x01: output=0x02; break;
   296                           
   297  07B4  3002               	movlw	2
   298  07B5  2FC3               	goto	L8
   299  07B6                     l514:	
   300                           ;LASTRE_TORAL_LE6-4TX.c: 12: case 0x02: output=0x03; break;
   301                           
   302  07B6  3003               	movlw	3
   303  07B7  2FC3               	goto	L8
   304  07B8                     l516:	
   305                           ;LASTRE_TORAL_LE6-4TX.c: 13: case 0x04: output=0x04; break;
   306                           
   307  07B8  3004               	movlw	4
   308  07B9  2FC3               	goto	L8
   309  07BA                     l518:	
   310                           ;LASTRE_TORAL_LE6-4TX.c: 14: case 0x05: output=0x05; break;
   311                           
   312  07BA  3005               	movlw	5
   313  07BB  2FC3               	goto	L8
   314  07BC                     l520:	
   315                           ;LASTRE_TORAL_LE6-4TX.c: 15: case 0x06: output=0x06; break;
   316                           
   317  07BC  3006               	movlw	6
   318  07BD  2FC3               	goto	L8
   319  07BE                     l522:	
   320                           ;LASTRE_TORAL_LE6-4TX.c: 16: case 0x08: output=0x07; break;
   321                           
   322  07BE  3007               	movlw	7
   323  07BF  2FC3               	goto	L8
   324  07C0                     l524:	
   325                           ;LASTRE_TORAL_LE6-4TX.c: 17: case 0x09: output=0x08; break;
   326                           
   327  07C0  3008               	movlw	8
   328  07C1  2FC3               	goto	L8
   329  07C2                     l526:	
   330                           ;LASTRE_TORAL_LE6-4TX.c: 18: case 0x0A: output=0x09; break;
   331                           
   332  07C2  3009               	movlw	9
   333  07C3                     L8:	
   334  07C3  00F6               	movwf	checkInput@output
   335  07C4  3000               	movlw	0
   336  07C5  00F7               	movwf	checkInput@output+1
   337                           
   338                           ;LASTRE_TORAL_LE6-4TX.c: 19: case 0x0C: ; break;
   339  07C6  2FF5               	goto	l534
   340  07C7                     l528:	
   341                           ;LASTRE_TORAL_LE6-4TX.c: 20: case 0x0D: output=0x00; break;
   342                           
   343  07C7  01F6               	clrf	checkInput@output
   344  07C8  01F7               	clrf	checkInput@output+1
   345                           
   346                           ;LASTRE_TORAL_LE6-4TX.c: 23: }
   347                           
   348                           ;LASTRE_TORAL_LE6-4TX.c: 21: case 0x0E: ; break;
   349  07C9  2FF5               	goto	l534
   350  07CA                     l532:	
   351                           
   352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   353                           ; Switch size 1, requested type "space"
   354                           ; Number of cases is 1, Range of values is 0 to 0
   355                           ; switch strategies available:
   356                           ; Name         Instructions Cycles
   357                           ; simple_byte            4     3 (average)
   358                           ; direct_byte           11     8 (fixed)
   359                           ; jumptable            260     6 (fixed)
   360                           ;	Chosen strategy is simple_byte
   361  07CA  0875               	movf	checkInput@data+1,w
   362  07CB  3A00               	xorlw	0	; case 0
   363  07CC  1903               	skipnz
   364  07CD  2FCF               	goto	l582
   365  07CE  2FF5               	goto	l534
   366  07CF                     l582:	
   367                           
   368                           ; Switch size 1, requested type "space"
   369                           ; Number of cases is 12, Range of values is 0 to 14
   370                           ; switch strategies available:
   371                           ; Name         Instructions Cycles
   372                           ; simple_byte           37    19 (average)
   373                           ; direct_byte           53     8 (fixed)
   374                           ; jumptable            260     6 (fixed)
   375                           ;	Chosen strategy is simple_byte
   376  07CF  0874               	movf	checkInput@data,w
   377  07D0  3A00               	xorlw	0	; case 0
   378  07D1  1903               	skipnz
   379  07D2  2FB2               	goto	l510
   380  07D3  3A01               	xorlw	1	; case 1
   381  07D4  1903               	skipnz
   382  07D5  2FB4               	goto	l512
   383  07D6  3A03               	xorlw	3	; case 2
   384  07D7  1903               	skipnz
   385  07D8  2FB6               	goto	l514
   386  07D9  3A06               	xorlw	6	; case 4
   387  07DA  1903               	skipnz
   388  07DB  2FB8               	goto	l516
   389  07DC  3A01               	xorlw	1	; case 5
   390  07DD  1903               	skipnz
   391  07DE  2FBA               	goto	l518
   392  07DF  3A03               	xorlw	3	; case 6
   393  07E0  1903               	skipnz
   394  07E1  2FBC               	goto	l520
   395  07E2  3A0E               	xorlw	14	; case 8
   396  07E3  1903               	skipnz
   397  07E4  2FBE               	goto	l522
   398  07E5  3A01               	xorlw	1	; case 9
   399  07E6  1903               	skipnz
   400  07E7  2FC0               	goto	l524
   401  07E8  3A03               	xorlw	3	; case 10
   402  07E9  1903               	skipnz
   403  07EA  2FC2               	goto	l526
   404  07EB  3A06               	xorlw	6	; case 12
   405  07EC  1903               	skipnz
   406  07ED  2FF5               	goto	l534
   407  07EE  3A01               	xorlw	1	; case 13
   408  07EF  1903               	skipnz
   409  07F0  2FC7               	goto	l528
   410  07F1  3A03               	xorlw	3	; case 14
   411  07F2  1903               	skipnz
   412  07F3  2FF5               	goto	l534
   413  07F4  2FF5               	goto	l534
   414  07F5                     l534:	
   415                           
   416                           ;LASTRE_TORAL_LE6-4TX.c: 24: return output;
   417  07F5  0877               	movf	checkInput@output+1,w
   418  07F6  01F1               	clrf	?_checkInput+1
   419  07F7  07F1               	addwf	?_checkInput+1,f
   420  07F8  0876               	movf	checkInput@output,w
   421  07F9  01F0               	clrf	?_checkInput
   422  07FA  07F0               	addwf	?_checkInput,f
   423  07FB  0008               	return
   424  07FC                     __end_of_checkInput:	
   425  007E                     btemp	set	126	;btemp
   426  007E                     wtemp	set	126
   427  007E                     wtemp0	set	126
   428  0080                     wtemp1	set	128
   429  0082                     wtemp2	set	130
   430  0084                     wtemp3	set	132
   431  0086                     wtemp4	set	134
   432  0088                     wtemp5	set	136
   433  007F                     wtemp6	set	127
   434  007E                     ttemp	set	126
   435  007E                     ttemp0	set	126
   436  0081                     ttemp1	set	129
   437  0084                     ttemp2	set	132
   438  0087                     ttemp3	set	135
   439  007F                     ttemp4	set	127
   440  007E                     ltemp	set	126
   441  007E                     ltemp0	set	126
   442  0082                     ltemp1	set	130
   443  0086                     ltemp2	set	134
   444  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_checkInput

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              8 COMMON     2     2      0
                         _checkInput
 ---------------------------------------------------------------------------------
 (1) _checkInput                                           8     6      2      30
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 23 11:22:54 2023

                     l44 0797                       l47 07A4                      l510 07B2  
                    l520 07BC                      l512 07B4                      l522 07BE  
                    l514 07B6                      l524 07C0                      l516 07B8  
                    l532 07CA                      l526 07C2                      l518 07BA  
                    l534 07F5                      l528 07C7                      l556 0794  
                    l582 07CF                      _RB4 0034                      _TX9 04C6  
                   _BRGH 04C2                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _SYNC 04C4                     _main 0783  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019                    main@i 0078                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 07A7  
                 ??_main 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             _checkInput 07A7               __pmaintext 0783                  __ptext0 0000  
                __ptext1 07A7              ?_checkInput 0070     end_of_initialization 07FC  
         checkInput@data 0074      __size_of_checkInput 0055      start_initialization 07FC  
              ___latbits 0002             ??_checkInput 0072       __end_of_checkInput 07FC  
       checkInput@output 0076            __size_of_main 0024  
